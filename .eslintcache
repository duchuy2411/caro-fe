[{"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\index.js":"1","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\TableList\\index.js":"2","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\MatchHistory\\MatchHistoryItem\\HistoryChat\\index.js":"3","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\Board\\Square\\index.js":"4","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\hooks\\useScript.js":"5","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\auth\\index.js":"6","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\SignIn\\index.js":"7","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\SignIn\\ForgetPassword\\ResetPassword\\index.js":"8","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\MatchHistory\\index.js":"9","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\SignUp\\index.js":"10","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\TableList\\TableItem\\index.js":"11","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\Profile\\index.js":"12","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\OnlineUserList\\index.js":"13","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\userInfoDialogSlice.js":"14","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\users\\index.js":"15","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\Chat\\index.js":"16","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\matches\\index.js":"17","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\onlineUsersSlice.js":"18","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\MatchHistory\\MatchHistoryItem\\index.js":"19","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\binaryToString.js":"20","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\PlayingUserList\\index.js":"21","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\matchHistoryItemSlice.js":"22","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\boardsSlice.js":"23","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\users\\block\\index.js":"24","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\SignIn\\ForgetPassword\\index.js":"25","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\Board\\index.js":"26","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\CheckActivateAccount\\index.js":"27","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\Audience\\index.js":"28","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\playingUsersSlice.js":"29","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\App.js":"30","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\index.js":"31","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\history.js":"32","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\index.js":"33","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\Game\\index.js":"34","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\matches\\messages\\index.js":"35","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\RankingTable\\index.js":"36","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\index.js":"37","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\MatchHistory\\MatchHistoryItem\\HistoryGame\\index.js":"38","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\UserInfoDialog\\index.js":"39","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\index.js":"40","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\axios.js":"41","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\domain.js":"42","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\reportWebVitals.js":"43"},{"size":639,"mtime":1609747257931,"results":"44","hashOfConfig":"45"},{"size":21805,"mtime":1610418665139,"results":"46","hashOfConfig":"45"},{"size":1722,"mtime":1609832128273,"results":"47","hashOfConfig":"45"},{"size":394,"mtime":1608870069491,"results":"48","hashOfConfig":"45"},{"size":350,"mtime":1608896722761,"results":"49","hashOfConfig":"45"},{"size":1270,"mtime":1610376747651,"results":"50","hashOfConfig":"45"},{"size":3168,"mtime":1610503796871,"results":"51","hashOfConfig":"45"},{"size":1780,"mtime":1609667916183,"results":"52","hashOfConfig":"45"},{"size":5287,"mtime":1610162719020,"results":"53","hashOfConfig":"45"},{"size":4056,"mtime":1610430449546,"results":"54","hashOfConfig":"45"},{"size":22629,"mtime":1610427999927,"results":"55","hashOfConfig":"45"},{"size":6070,"mtime":1610163622573,"results":"56","hashOfConfig":"45"},{"size":4592,"mtime":1609641319437,"results":"57","hashOfConfig":"45"},{"size":2634,"mtime":1609603098944,"results":"58","hashOfConfig":"45"},{"size":2984,"mtime":1610428344295,"results":"59","hashOfConfig":"45"},{"size":4995,"mtime":1609829689871,"results":"60","hashOfConfig":"45"},{"size":2965,"mtime":1609938356981,"results":"61","hashOfConfig":"45"},{"size":1156,"mtime":1609417060186,"results":"62","hashOfConfig":"45"},{"size":6517,"mtime":1610163912550,"results":"63","hashOfConfig":"45"},{"size":564,"mtime":1609654441700,"results":"64","hashOfConfig":"45"},{"size":12255,"mtime":1609830822064,"results":"65","hashOfConfig":"45"},{"size":1507,"mtime":1610163209931,"results":"66","hashOfConfig":"45"},{"size":2454,"mtime":1610391303901,"results":"67","hashOfConfig":"45"},{"size":1229,"mtime":1610376747652,"results":"68","hashOfConfig":"45"},{"size":1728,"mtime":1609666493274,"results":"69","hashOfConfig":"45"},{"size":1396,"mtime":1608870069491,"results":"70","hashOfConfig":"45"},{"size":640,"mtime":1609672014327,"results":"71","hashOfConfig":"45"},{"size":2521,"mtime":1609265391547,"results":"72","hashOfConfig":"45"},{"size":2354,"mtime":1610426100768,"results":"73","hashOfConfig":"45"},{"size":1343,"mtime":1610155752351,"results":"74","hashOfConfig":"45"},{"size":716,"mtime":1610155902947,"results":"75","hashOfConfig":"45"},{"size":113,"mtime":1609940839028,"results":"76","hashOfConfig":"45"},{"size":9043,"mtime":1610430106221,"results":"77","hashOfConfig":"45"},{"size":3783,"mtime":1610078933722,"results":"78","hashOfConfig":"45"},{"size":3329,"mtime":1610376747652,"results":"79","hashOfConfig":"45"},{"size":2873,"mtime":1609406574070,"results":"80","hashOfConfig":"45"},{"size":3843,"mtime":1609669711480,"results":"81","hashOfConfig":"45"},{"size":2352,"mtime":1609600141465,"results":"82","hashOfConfig":"45"},{"size":4110,"mtime":1610163559772,"results":"83","hashOfConfig":"45"},{"size":909,"mtime":1609938356981,"results":"84","hashOfConfig":"45"},{"size":114,"mtime":1610430651299,"results":"85","hashOfConfig":"45"},{"size":63,"mtime":1610430168392,"results":"86","hashOfConfig":"45"},{"size":375,"mtime":1607312486928,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1v1owjk",{"filePath":"91","messages":"92","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"122"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"94"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"94"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\index.js",[],["212","213"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\TableList\\index.js",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TableItem from './TableItem/index';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport axios from '../../../utils/axios';\r\nimport socketio from 'socket.io-client';\r\nimport history from \"../../../utils/history\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    selectAllBoards,\r\n    selectBoardById,\r\n    selectBoardIds,\r\n    fetchBoards,\r\n    addNewBoard,\r\n    selectBoardByRoom,\r\n    addNewBoardNotUpdateDB,\r\n    boardUpdated\r\n} from '../../../store/slice/boardsSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 1280,\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    tableImage: {\r\n        width: '100px',\r\n        height: '100px',\r\n        marginLeft: 22\r\n        \r\n    },\r\n    gridList: {\r\n        alignContent: 'center',\r\n        marginTop: 0\r\n    },\r\n    cardStyle: {\r\n        width: 180, \r\n        height: 200, \r\n        textAlign: 'center',\r\n        margin: 5,\r\n        backgroundImage: 'url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSF8tq7J9mu_6vdiGTDAMwY9hC5t_ti2ukrhg&usqp=CAU\")'\r\n    }\r\n}));\r\n\r\n\r\nexport default function TableList({socket}) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const boardStatus = useSelector((state) => state.boards.status);\r\n    const boards = useSelector(selectAllBoards);\r\n    let [tableList, setTableList] = useState([]);\r\n    let [openCreateTableDialog, setOpenCreateTableDialog] = useState(false);\r\n    const [time, setTime] = useState(15);\r\n    const [openFindRoom, setOpenFindRoom] = useState(false);\r\n    const [notFound, setNoFound] = useState(false);\r\n    const [idRoom, setIdRoom] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [openPasswordDialog, setOpenPasswordDialog] = useState(false);\r\n    const board = useSelector((state) => selectBoardByRoom(state, idRoom));\r\n\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('currentuser')));\r\n\r\n    const [openLoading, setOpenLoading] = useState(false);\r\n    const [openInvitationBox, setOpenInvitationBox] = useState(false);\r\n    const [invitationBoxMessage, setInvitationBoxMessage] = useState(\"\");\r\n    const [boardCodeInvited, setBoardCodeInvited] = useState(null);\r\n    useEffect(() => {\r\n        if (boardStatus === 'idle') {\r\n            dispatch(fetchBoards());\r\n        }\r\n    }, [boardStatus, dispatch]);\r\n\r\n    // useEffect(() => {\r\n    //     if (boardStatus === 'succeeded') {\r\n    //         setTableList(boards);\r\n    //     }\r\n    // }, [boardStatus, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('join-room-quick-play', function (data) {\r\n                if (currentUser._id === data[0]) {\r\n                    setOpenLoading(false);\r\n                    window.location.href = '/play/' + data[1];\r\n                }\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            if (socket) {\r\n                socket.removeAllListeners('join-room-quick-play', () => { })\r\n            }\r\n        }\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('send-invitation', function (data) {\r\n                if (currentUser._id === data[1]) {\r\n                    setBoardCodeInvited(data[2]);\r\n                    setInvitationBoxMessage(\"Người chơi \" + data[0] + \" muốn mời bạn vào phòng \" + data[2]);\r\n                    setOpenInvitationBox(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            if (socket) {\r\n                socket.removeAllListeners('send-invitation', () => { })\r\n            }\r\n        }\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (socket) {\r\n            socket.on('add-new-table', async function (newBoard) {\r\n                console.log('add-new-table')\r\n                await dispatch(addNewBoardNotUpdateDB(newBoard));\r\n                //setOnlineUserList(listOnline);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            if (socket) {\r\n                // nghe xong sự kiện list-online thì xóa\r\n                socket.removeAllListeners('add-new-table', () => { })\r\n            }\r\n        }\r\n    }, [socket]);\r\n    \r\n    useEffect(() => {\r\n\r\n        if (socket) {\r\n            socket.on('update-table', async function (newBoard) {\r\n                console.log('update table');\r\n                await dispatch(boardUpdated({ newBoard: newBoard }));\r\n                //setOnlineUserList(listOnline);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            if (socket) {\r\n                // nghe xong sự kiện list-online thì xóa\r\n                socket.removeAllListeners('update-table', () => { })\r\n            }\r\n        }\r\n    }, [socket]);\r\n\r\n    function renderTableItem(tableId, title, description, state) {\r\n        const path = '/play/' + tableId;\r\n        let avatar;\r\n        if (state == -1)\r\n            return null;\r\n        if (state == 1)\r\n            avatar = '/img/waiting-table.png';\r\n        else\r\n            avatar = '/img/playing-table.png';\r\n        return (\r\n            <GridListTile key={tableId}>\r\n                <Card variant=\"outlined\" className={classes.cardStyle}>\r\n                    <CardContent>\r\n                        {/*<Link to={{pathname: path, state: {idBoard: tableId}}}>\r\n                            <Avatar variant=\"square\" className={classes.tableImage} src='/img/waiting-table.png' ></Avatar>\r\n                        </Link>*/}\r\n                        <Avatar onClick={() => checkPassword(tableId)} variant=\"square\" className={classes.tableImage} src={avatar} />\r\n                        <Typography variant=\"h6\" component=\"h6\" gutterBottom style={{color: 'white'}}>\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\" style={{color: 'white'}}>\r\n                            {description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </GridListTile>\r\n\r\n\r\n\r\n            // <ListItem>\r\n            //     <Card variant=\"outlined\">\r\n            //         <CardContent>\r\n            //             <Link to={path}>\r\n            //                 <Avatar variant=\"square\" className={classes.tableImage} src='/img/table.png' ></Avatar>\r\n            //             </Link>\r\n            //             <Typography className={classes.title} variant=\"h5\" component=\"h2\" gutterBottom>\r\n            //                 {title}\r\n            //             </Typography>\r\n            //             <Typography variant=\"body2\" component=\"p\">\r\n            //                 {description}\r\n            //             </Typography>\r\n            //         </CardContent>\r\n            //         {/* <CardActions >\r\n            //         <Link to={path}>\r\n            //             <Button size=\"small\" onClick={() => setSelectedBoardTitleToView(title)}>VIEW</Button>\r\n            //         </Link>\r\n            //         <Button size=\"small\" id={boardId} onClick={(e) => {  updateSelectedBoardToEditOrDelete(e); setOpenEditBoardDialog(true); }}>EDIT</Button>\r\n            //         <Button size=\"small\" onClick={(e) => { updateSelectedBoardToEditOrDelete(e); deleteBoard(); }}>DELETE </Button>\r\n            //         </CardActions> */}\r\n            //     </Card>\r\n            // </ListItem>\r\n        );\r\n    }\r\n\r\n    function renderTableList() {\r\n        let result = [];\r\n        boards.map((tableItem) => result.push(renderTableItem(tableItem.code, tableItem.title, tableItem.description, tableItem.state)));\r\n        return result;\r\n    }\r\n\r\n    async function createNewTable(newTitle, newDescription, newPassword) {\r\n        // let newTitle = document.getElementById('title-add').value;\r\n        // let newDescription = document.getElementById('description-add').value;\r\n        if (!newTitle || !newDescription) {\r\n            alert(\"Phải nhập đủ title và description\");\r\n            return;\r\n        }\r\n        const newBoard = {\r\n            title: newTitle,\r\n            description: newDescription,\r\n            password: newPassword, time,\r\n            id_user1: JSON.parse(sessionStorage.currentuser)._id,\r\n            state: 1\r\n        };\r\n\r\n        const res = await dispatch(addNewBoard(newBoard));\r\n\r\n        if (res.payload) {\r\n            redirectToRoom(res.payload.code);\r\n        }\r\n\r\n        socket.emit('create-table', [newBoard.id_user1]);\r\n\r\n        //tableList.push({id: \"4\", title: newTitle, description: newDescription});\r\n        // fetch(URL + '/api/add-board/username/' + username + '/title/' + title + '/description/' + description)\r\n        //     .then(res => res.json())\r\n        //     .then(res => { if (res) alert('Add new board successfully'); else alert('Add new board unsuccessfully') })\r\n        //     .catch(err => err);\r\n        // axios.post('boards', {\r\n        //     user: JSON.parse(sessionStorage.currentuser)._id,\r\n        //     title: newTitle,\r\n        //     description: newDescription,\r\n        //     width: dimension,\r\n        //     height: dimension,\r\n        //     })\r\n        //     .then(res => {\r\n        //         console.log(res);\r\n        //         history.push({\r\n        //             pathname: '/play/' + res.data.data.code,\r\n        //             state: {idBoard: res.data.data.code}\r\n        //         });\r\n        //         window.location.reload();\r\n        //         // setTableList([...tableList, {id: res.data.data.code, title: res.data.data.title, description: res.data.data.description}]);\r\n        //     })\r\n        //     .catch(err => {\r\n        //         console.log(err)\r\n        //     })\r\n    }\r\n\r\n    function changeTime(e) {\r\n        setTime(e.target.value);\r\n    }\r\n\r\n    function findRoom() {\r\n        if (!board[0]) {\r\n            setNoFound(true);\r\n            return;\r\n        }\r\n        if (board[0].password && idRoom) {\r\n            // setOpenFindRoom(false);\r\n            setNoFound(false);\r\n            setOpenPasswordDialog(true);\r\n        } else {\r\n            redirectToRoom(board.code);\r\n        }\r\n    }\r\n\r\n    function checkPassword(idBoard) {\r\n        setNoFound(false);\r\n        const newBoard = boards.filter(board => board.code == idBoard);\r\n        if (newBoard[0].password) {\r\n            setOpenPasswordDialog(true);\r\n            setIdRoom(idBoard);\r\n        } else {\r\n            redirectToRoom(idBoard);\r\n        }\r\n    }\r\n    // sleep time expects milliseconds\r\n    function sleep (time) {\r\n        return new Promise((resolve) => setTimeout(resolve, time));\r\n    }\r\n\r\n    async function findUser() {\r\n        const api = await axios.get('boards/quickPlay');\r\n        if (api.data.data) {\r\n            let listIdUser = JSON.stringify(api.data.data).slice(2, JSON.stringify(api.data.data).length - 2).split('\",\"');\r\n            let remainingIdUser;\r\n            if (currentUser._id === listIdUser[0])\r\n                remainingIdUser = listIdUser[1];\r\n            else\r\n                remainingIdUser = listIdUser[0];\r\n            await createNewTable(currentUser.displayname, \"Caro Open\", \"\");\r\n            await socket.emit(\"invite-user-clicked-quick-play\", [currentUser._id, remainingIdUser]);\r\n            await setOpenLoading(false);\r\n            //alert(listIdUser[0] + \"+\" + listIdUser[1]);\r\n        }\r\n    }\r\n\r\n    async function quickPlay() {\r\n        await axios.post('boards/quickPlay', {iduser: currentUser._id, cup: currentUser.cup})\r\n            .then(async res => {\r\n                await setOpenLoading(true);\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n        await findUser();\r\n    }\r\n\r\n    async function deleteQuickPlay() {\r\n        await axios.post('boards/deleteQuickPlay', {iduser: currentUser._id});\r\n        await setOpenLoading(false);\r\n        await alert(\"Không tìm thấy người chơi phù hợp\");\r\n    }\r\n\r\n    function acceptInvitation() {\r\n        window.location.href = '/play/' + boardCodeInvited;\r\n    }\r\n\r\n    // function updateSelectedBoardToEditOrDelete(e) {\r\n    //     if (e.currentTarget.textContent === \"EDIT\")\r\n    //         selectedBoardToEditOrDelete.id = e.currentTarget.id;\r\n    //     else\r\n    //         selectedBoardToEditOrDelete.id = e.currentTarget.previousSibling.id;\r\n    //     for (var i = 0; i < boardList.length; i++) {\r\n    //         if (boardList[i].id == selectedBoardToEditOrDelete.id) {\r\n    //             setSelectedBoardToEditOrDelete({id: boardList[i].id, title: boardList[i].title, description: boardList[i].description});\r\n    //             //selectedBoard.description = boardList[i].description;\r\n    //             break;\r\n    //         }\r\n    //     }\r\n\r\n    function joinRoom() {\r\n        let passwordBoard;\r\n        if (openFindRoom) {\r\n            passwordBoard = board[0].password;\r\n        } else {\r\n            passwordBoard = boards.filter(board => board.code == idRoom)[0].password;\r\n        }\r\n        if (passwordBoard !== password) {\r\n            setNoFound(true);\r\n            return;\r\n        }\r\n       redirectToRoom(board[0].code);\r\n    }\r\n\r\n    function redirectToRoom(idBoard) {\r\n        history.push({\r\n            pathname: '/play/' + idBoard,\r\n            state: {idBoard}\r\n        });\r\n        window.location.reload();\r\n        // socket.emit('join-room', [idBoard, JSON.parse(sessionStorage.currentuser)._id]);\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginLeft: 40, width: '1000px' }}>\r\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom color=\"primary\">\r\n                Danh sách bàn chơi\r\n            </Typography>\r\n\r\n            <Button onClick={() => {setOpenFindRoom(true); setNoFound(false);}}>\r\n                <SearchIcon style={{width: 50, height: 50, color: 'red'}}/>\r\n                <Typography>\r\n                    Tìm phòng\r\n                </Typography>\r\n            </Button>\r\n\r\n            <Button onClick={() => quickPlay()} style={{backgroundColor: 'blue', color: 'white', marginLeft: '100px'}}>\r\n                Chơi nhanh\r\n            </Button>\r\n\r\n            <GridList cellHeight={180} className={classes.gridList} cols={3}>\r\n                <GridListTile key=\"Subheader\" >\r\n                    <Card variant=\"outlined\" className={classes.cardStyle}>\r\n\r\n                        <CardActions style={{ justifyContent: 'center' }} >\r\n                            <Button size=\"small\" onClick={() => setOpenCreateTableDialog(true)}>\r\n                                <AddCircleIcon style={{width: 90, height: 90, color: 'violet'}} />\r\n                            </Button>\r\n                        </CardActions>\r\n\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"p\" color=\"error\">\r\n                                Tạo bàn\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </GridListTile>\r\n\r\n                {boards.map((tableItem) => renderTableItem(tableItem.code, tableItem.title, tableItem.description, tableItem.state))}\r\n                {/* {renderTableList()} */}\r\n\r\n            </GridList>\r\n\r\n\r\n            <Dialog open={openCreateTableDialog} onClose={() => setOpenCreateTableDialog(false)} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle>Tạo bàn</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Để tạo bàn mới, hãy nhập thông tin bàn ở đây.\r\n                    </DialogContentText>\r\n\r\n                    <TextField autoFocus margin=\"dense\" id=\"title-add\" label=\"Tên\" fullWidth required/>\r\n                    <TextField margin=\"dense\" id=\"description-add\" label=\"Miêu tả\" fullWidth required />\r\n                    <TextField margin=\"dense\" id=\"password-add\" label=\"Mật khẩu (optional)\" fullWidth/>\r\n                    <InputLabel id=\"demo-simple-select-label\" style={{marginTop: '20px'}}>Thời gian cho một nước</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"time-play-add\"\r\n                        value={time}\r\n                        onChange={changeTime}\r\n                    >\r\n                        <MenuItem value={15}>15s</MenuItem>\r\n                        <MenuItem value={30}>30s</MenuItem>\r\n                        <MenuItem value={45}>45s</MenuItem>\r\n                    </Select>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { setOpenCreateTableDialog(false); }} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => { setOpenCreateTableDialog(false); createNewTable(document.getElementById('title-add').value, document.getElementById('description-add').value, document.getElementById('password-add').value); }} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openFindRoom} onClose={() => setOpenFindRoom(false)} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle>Tìm bàn</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Nhập id để tìm bàn\r\n                    </DialogContentText>\r\n\r\n                    <TextField onChange={e => setIdRoom(e.target.value)} error={notFound} helperText='Phòng không tồn tại' autoFocus margin=\"dense\" id=\"id-room\" label=\"ID\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { setOpenFindRoom(false); }} color=\"danger\">\r\n                        Huỷ\r\n                    </Button>\r\n                    <Button onClick={() => {  findRoom(); }} color=\"primary\">\r\n                        Tìm\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={openLoading} aria-labelledby=\"form-dialog-title\">\r\n                <DialogContent>\r\n                    <img src=\"https://appa.com.vn/images/default/loading.gif\" />\r\n                    <DialogContentText>\r\n                        Đang tìm đối thủ, vui lòng đợi trong giây lát...\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { deleteQuickPlay() }} color=\"danger\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openInvitationBox} aria-labelledby=\"form-dialog-title\">\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {invitationBoxMessage}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { setOpenInvitationBox(false); }} color=\"danger\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => { acceptInvitation(); setOpenInvitationBox(false); }} color=\"danger\">\r\n                        Accept\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openPasswordDialog} onClose={() => {setOpenPasswordDialog(false); setNoFound(false);}} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle>Nhập mật khẩu</DialogTitle>\r\n                <DialogContent>\r\n                   {/* <DialogContentText>\r\n                        To edit board, please enter new title and description here.\r\n                    </DialogContentText>*/}\r\n\r\n                    <TextField onChange={e => setPassword(e.target.value)} autoFocus margin=\"dense\" error={notFound} helperText='Sai mật khẩu' id=\"password-join\" label=\"Title\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { setNoFound(false); setOpenPasswordDialog(false); }} color=\"primary\">\r\n                        Huỷ\r\n                    </Button>\r\n                    <Button onClick={() => {joinRoom();}} color=\"primary\">\r\n                        Vào\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </div>\r\n    );\r\n}",["240","241"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\MatchHistory\\MatchHistoryItem\\HistoryChat\\index.js",["242","243","244"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from '../../../../../../utils/axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nexport default function Chat({id_match}) {\r\n    \r\n    const classes = useStyles();\r\n\r\n    let [itemChatList, setItemChatList] = useState([<li></li>]);\r\n\r\n    function getItemChatList() {\r\n        axios.get('messages/boardmatch/' + id_match)\r\n        .then(res => {\r\n            let messageList = res.data.data;\r\n            let currentItemChatList = [];\r\n            messageList.map((messageItem) => {\r\n                let itemChatContent = messageItem.fromDisplayName + \": \" + messageItem.content;\r\n                currentItemChatList.push(renderItemChat(itemChatContent));\r\n            })\r\n            setItemChatList(currentItemChatList);\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getItemChatList();\r\n      }, [itemChatList.length])\r\n\r\n      function renderItemChat(itemChatContent) {\r\n        return (<li>{itemChatContent}</li>)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: 250, backgroundImage: 'url(\"https://i.gifer.com/3w8M.gif\")'}}>\r\n            <div style={{height: 50, color: 'red', textAlign: 'center'}}>\r\n                <h1>Chat</h1>\r\n            </div>\r\n            <div  style={{borderWidth: 'thin', borderStyle: 'solid', borderColor: 'black', height: '530px', overflowX: 'hidden'}}>\r\n                <ul id=\"chatAreaContent\" style={{textAlign: 'left', listStyleType: 'none', display: 'inline'}}>\r\n                    {itemChatList}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n",["245","246"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\Board\\Square\\index.js",[],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\hooks\\useScript.js",[],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\auth\\index.js",["247"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\SignIn\\index.js",["248","249","250"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\SignIn\\ForgetPassword\\ResetPassword\\index.js",["251","252"],"import React, { useEffect, useState, useLocation } from 'react';\r\nimport './index.css';\r\nimport axios from '../../../../../../utils/axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function ResetPassword() {\r\n    const [isResetPasswordSuccess, setIsResetPasswordSuccess] = useState(false);\r\n    useEffect(() => {\r\n        \r\n    }, []);\r\n\r\n    \r\n\r\n    async function resetPassword() {\r\n        const password = document.getElementsByName(\"password\")[0].value;\r\n        const retypePassword = document.getElementsByName(\"retypePassword\")[0].value;\r\n\r\n        if (password != retypePassword) {\r\n            alert(\"Nhập lại mật khẩu không đúng\");\r\n            return;\r\n        }\r\n        if (password.length < 6) {\r\n            alert(\"Password phải từ 6 kí tự trở lên\");\r\n            return;\r\n        }\r\n        \r\n        const key = window.location.pathname.split('/')[2];\r\n\r\n        const api = await axios.post(\"api/users/reset-password\", {key, password});\r\n        alert(api.data.message);\r\n        if (api.data.data) {\r\n            setIsResetPasswordSuccess(true);\r\n        }\r\n    }\r\n    if (isResetPasswordSuccess)\r\n        return (<Redirect to=\"/sign-in\"/>);\r\n\r\n    return (\r\n        <div id=\"login-box\" style={{background: 'lavender', marginBottom: '0px'}}>\r\n            <form onSubmit={(e) => {e.preventDefault(); resetPassword(); }} class=\"left\">\r\n                <h1>RESET MẬT KHẨU</h1>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required/>\r\n                <input type=\"password\" name=\"retypePassword\" placeholder=\"Retype password\" required/>\r\n                <input type=\"submit\" name=\"signup_submit\" value=\"THỰC HIỆN\" />\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n}",["253","254"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\MatchHistory\\index.js",["255","256","257","258","259","260","261","262","263","264"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState, useLocation } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from \"../../../..//utils/axios\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { matchHistoryItemUpdated } from '../../../../store/slice/matchHistoryItemSlice';\r\nimport getFormattedDate from '../../../../utils/date';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '600px',\r\n      margin: 'auto'\r\n    },\r\n    inline: {\r\n      display: 'inline',\r\n    },\r\n  }));\r\n\r\nexport default function MatchHistory() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    let [matchListView, setMatchListView] = useState([]);\r\n    let [matchList, setMatchList] = useState([]);\r\n    //let [viewedUser, setViewdUser] = useState(null);\r\n    let [remainingUser, setRemainingUser] = useState(null);\r\n    const iduser = window.location.pathname.split('/')[2];\r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const api_match = await axios.get(\"matchs/iduser/\" + iduser);\r\n                if (api_match.data.data) {\r\n                    setMatchList(api_match.data.data);\r\n                    renderMatchListView();\r\n                }\r\n            } catch(error) {\r\n                \r\n            }\r\n\r\n            // axios.get(\"boards/getmatch/\" + iduser)\r\n            //     .then(res => {\r\n            //         let matchList = res.data.data;\r\n            //         //setMatchList(res.data.data);\r\n            //         axios.get(\"api/users/id/\" + iduser)\r\n            //             .then(res => {\r\n            //                 let viewedUser = res.data.data.user;\r\n            //                 //setViewdUser(res.data.data.user);\r\n            //                 renderMatchListView(matchList, viewedUser);\r\n            //             })\r\n            //             .catch(err => {\r\n            //                 console.log(err)\r\n            //             })\r\n            //     })\r\n            //     .catch(err => {\r\n            //         console.log(err)\r\n            //     })\r\n        }\r\n        fetchData();\r\n    }, [matchList.length]);\r\n\r\n    function renderMatchItemView(match) {\r\n        let title = match.displayname_user1 + \" vs \" + match.displayname_user2;\r\n        const matchHistoryItemLink = \"/match-history/\" + iduser + \"/\" + match._id;\r\n        let createdAt = new Date(match.createdAt);\r\n\r\n        return (\r\n            <div style={{marginBottom: '20px', backgroundImage: 'url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSF8tq7J9mu_6vdiGTDAMwY9hC5t_ti2ukrhg&usqp=CAU\")'}}>\r\n                <ListItem style={{marginLeft: '100px'}}>\r\n                    <Link to={matchHistoryItemLink}>\r\n                        <ListItemAvatar style={{marginRight: '60px'}} onClick={() => displayMatchHistoryItem(match)}>\r\n                            <Avatar style={{width: '60px', height: '60px'}} alt=\"Remy Sharp\" src=\"https://cdn.pixabay.com/photo/2016/02/01/12/33/play-1173551_1280.png\" />\r\n                        </ListItemAvatar>\r\n                    </Link>\r\n                    <ListItemText>\r\n                        <React.Fragment>\r\n                            <Typography variant=\"body2\" color=\"error\" style={{fontWeight: 'bold'}}>\r\n                                {title}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" style={{color: \"greenyellow\", fontWeight: 'bold'}}>\r\n                                Diễn ra vào {getFormattedDate(createdAt)}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" style={{color: \"orange\", fontWeight: 'bold'}}>\r\n                                Người thắng: {match.displayname_win}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" style={{color: \"blue\", fontWeight: 'bold'}}>\r\n                                Số nước đi: {match.step.length}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                        \r\n                    </ListItemText>\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function renderMatchListView() {\r\n        let result = [];\r\n        matchList.map((match) => {\r\n            result.push(renderMatchItemView(match));\r\n        });\r\n        setMatchListView(result);\r\n    }\r\n\r\n    function displayMatchHistoryItem(match) {\r\n        dispatch(matchHistoryItemUpdated({matchHistoryItem: match}));\r\n    }\r\n\r\n    return(\r\n        <div >\r\n            <h1 style={{width: 'fit-content', margin: 'auto', color: 'green'}}>Lịch sử ván đấu</h1>\r\n            <List className={classes.root}>{matchListView}</List>\r\n        </div>\r\n\r\n    )\r\n}",["265","266"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\SignUp\\index.js",["267","268","269","270"],"import React, { useEffect, useState, useLocation } from 'react';\r\nimport './index.css';\r\nimport '../../../../utils/axios';\r\nimport axios from '../../../../utils/axios';\r\nimport domain from '../../../../utils/domain';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function SignUp() {\r\n    const signInWithUsernameAndPasswordPath = domain + \"/api/users/login\";\r\n    const signInWithGooglePath = domain + \"/auth/google\";\r\n    const signInWithFacebookPath = domain + \"/auth/facebook\";\r\n    const path = domain + \"/api/users\";\r\n    const [isSignUpSuccess, setIsSignUpSuccess] = useState(false);\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const specialChars = \"<>@!#$%^&*+{}?:;|()[]'\\\"\\\\,/~`= \";\r\n    function checkForSpecialChar(string) {\r\n    for(var i = 0; i < specialChars.length; i++) {\r\n        if(string.indexOf(specialChars[i]) > -1) {\r\n            return false\r\n        }\r\n    }\r\n        return true;\r\n    }\r\n\r\n    async function signUp() {\r\n        const username = document.getElementsByName(\"username\")[0].value;\r\n        const password = document.getElementsByName(\"password\")[0].value;\r\n        const retypePassword = document.getElementsByName(\"retypePassword\")[0].value;\r\n        const displayname = document.getElementsByName(\"displayname\")[0].value;\r\n        const email = document.getElementsByName(\"email\")[0].value;\r\n        if (password != retypePassword) {\r\n            alert(\"Nhập lại mật khẩu không đúng\");\r\n            return;\r\n        }\r\n        if (username.length < 5 || username.length > 50 || displayname.length < 5 || displayname.length > 50) {\r\n            alert(\"Username hoặc display name phải từ 5 đến 50 kí tự\");\r\n            return;\r\n        }\r\n        if (!checkForSpecialChar(username)) {\r\n            alert(\"Username không được chứa kí tự đặc biệt và khoảng trắng\");\r\n            return;\r\n        }\r\n        if (password.length < 6) {\r\n            alert(\"Password phải từ 6 kí tự trở lên\");\r\n            return;\r\n        }\r\n        if (!validateEmail(email)) {\r\n            alert(\"Email không đúng định dạng\");\r\n            return;\r\n        }\r\n        const api = await axios.post(\"api/users\", {displayname, username, password, email});\r\n        alert(api.data.message);\r\n        if (api.data.data) {\r\n            setIsSignUpSuccess(true);\r\n            \r\n        }\r\n    }\r\n    if (isSignUpSuccess)\r\n        return (<Redirect to=\"/sign-in\"/>);\r\n\r\n    return (\r\n        <div id=\"login-box\" style={{background: 'lavender', marginBottom: '0px'}}>\r\n            <form onSubmit={(e) => {e.preventDefault(); signUp(); }} class=\"left\">\r\n                <h1>SIGN UP</h1>\r\n\r\n                <input type=\"text\" name=\"username\" placeholder=\"Username\" required/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required/>\r\n                <input type=\"password\" name=\"retypePassword\" placeholder=\"Retype password\" required/>\r\n                <input type=\"text\" name=\"displayname\" placeholder=\"Display name\" required/>\r\n                <input type=\"text\" name=\"email\" placeholder=\"E-mail\" required/>\r\n\r\n                <input type=\"submit\" name=\"signup_submit\" value=\"SIGN UP\" />\r\n            </form>\r\n\r\n            <div class=\"right\">\r\n                <span class=\"loginwith\" style={{color: 'black'}}>Sign in with<br />social network</span>\r\n\r\n                <button class=\"social-signin facebook\">\r\n                    <a href={signInWithFacebookPath}>Sign in with facebook</a>\r\n                </button>\r\n                <button class=\"social-signin google\">\r\n                    <a href={signInWithGooglePath}>Sign in with Google+</a>\r\n                </button>\r\n            </div>\r\n            <div class=\"or\">OR</div>\r\n        </div>\r\n    );\r\n}",["271","272"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\TableList\\TableItem\\index.js",["273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303"],"import React, { useEffect, useState, useLocation } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    selectAllBoards,\r\n    selectBoardById,\r\n    selectBoardIds,\r\n    fetchBoards,\r\n    addNewBoard,\r\n    selectBoardByRoom,\r\n    boardUpdated\r\n} from '../../../../store/slice/boardsSlice';\r\n\r\nimport { addGuest, addHost, addHostAndGuest, updateHostStatistic, updateGuestStatistic } from '../../../../store/slice/playingUsersSlice';\r\n\r\nimport Game from '../../Game/index.js';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport GridList from '@material-ui/core/GridList';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PlayingUserList from '../../../../components/PlayingUserList';\r\nimport Audience from '../../../../components/Audience/index.js';\r\nimport Chat from '../../../../components/Chat/index.js';\r\nimport axios from \"../../../../utils/axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport socketio from 'socket.io-client';\r\n\r\n//import env from '../../env.json';\r\n//const URL = env.SERVER_DOMAIN_NAME;\r\nconst URL = \"\";\r\nvar queryString = require('querystring');\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: 'indianred',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    list: {\r\n        width: 400,\r\n        height: 500,\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    myStyle: {\r\n        display: 'flex',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n        flexDirection: 'row',\r\n    }\r\n}));\r\n\r\nexport default function TableItem({ socket }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const boardStatus = useSelector((state) => state.boards.status);\r\n    let board = useSelector((state) => selectBoardByRoom(state, window.location.pathname.split('/')[2]))[0];\r\n    const [match, setMatch] = useState();\r\n    const [hostPlayer, setHostPlayer] = useState();\r\n    const [guestPlayer, setGuestPlayer] = useState();\r\n    const [updateBoard, setUpdateBoard] = useState(board);\r\n    const [openHistory, setOpenHistory] = useState(false);\r\n    const [newSquare, setNewSquare] = useState(Array(400).fill(null));\r\n    const [winLine, setWinLine] = useState(null);\r\n    const [history, setHistory] = useState();\r\n    const [message, setMessage] = useState(\"\");\r\n    const [readyStart, setReadyStart] = useState(false);\r\n    const [isHost, setIsHost] = useState(false);\r\n    const [isStart, setIsStart] = useState(false);\r\n    const [isWin, setIsWin] = useState(false);\r\n    const [isJoin, setIsJoin] = useState(false);\r\n    const [duration, setDuration] = useState(-1);\r\n    const [second, setSecond] = useState(null);\r\n    const [oppSecond, setOppSecond] = useState(null);\r\n    const [isTypePlay, setIsTypePlay] = useState(false);\r\n    const [messageWin, setMessageWin] = useState();\r\n    const [hostPlayerId, setHostPlayerId] = useState(\"\");\r\n    const [guestPlayerId, setGuestPlayerId] = useState(\"\");\r\n    const [displayHandOver, setDisplayHandOver] = useState(false);\r\n\r\n    const [canLeaveRoom, setCanLeaveRoom] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (boardStatus === 'idle') {\r\n            dispatch(fetchBoards());\r\n        }\r\n    }, [boardStatus, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (board && !isJoin && socket) {\r\n            if (board && !isJoin && socket) {\r\n                if (board.id_user1 === JSON.parse(sessionStorage.currentuser)._id) {\r\n                    setIsHost(true);\r\n                    dispatch(addHost({ hostUser: JSON.parse(sessionStorage.currentuser) }));\r\n                    setHostPlayerId(board.id_user1);\r\n                }\r\n                else {\r\n                    setIsHost(false);\r\n                    axios.get(\"api/users/id/\" + board.id_user1)\r\n                        .then(res => {\r\n                            if (res.data.data) {\r\n                                const user1 = res.data.data.user;\r\n                                if (!board.id_user2)\r\n                                    dispatch(addHostAndGuest({ hostUser: user1, guestUser: JSON.parse(sessionStorage.currentuser) }))\r\n                                setHostPlayerId(board.id_user1);\r\n                                setGuestPlayerId(JSON.parse(sessionStorage.currentuser)._id);\r\n                            }\r\n                        })\r\n                        .catch(err => { })\r\n                }\r\n                console.log('join');\r\n                setTimeout(() => {\r\n                    socket.emit('join-room', [window.location.pathname.split('/')[2], JSON.parse(sessionStorage.currentuser)._id]);\r\n                }, 1500);\r\n                setIsJoin(true);\r\n                setDuration(parseInt(board.time));\r\n            }\r\n        }\r\n    }, [board, socket]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (socket && isHost) {\r\n            console.log('socket start');\r\n            socket.on('ready-start', function (board) {\r\n                console.log('start');\r\n                setReadyStart(true);\r\n\r\n                axios.get(\"api/users/id/\" + board.id_user2)\r\n                    .then(res => {\r\n                        if (res.data.data) {\r\n                            const user2 = res.data.data.user;\r\n                            dispatch(addGuest({ guestUser: user2 }));\r\n                        }\r\n                        setGuestPlayerId(board.id_user2);\r\n                    })\r\n                    .catch(err => { })\r\n            });\r\n            \r\n        }\r\n        // else if (socket && isJoin && !isHost) {\r\n        //     dispatch(addGuest({ guestUser: JSON.parse(sessionStorage.currentuser) }))\r\n        // }\r\n        return () => {\r\n            if (socket) {\r\n                // nghe xong xóa\r\n                socket.removeAllListeners('ready-start', function () {\r\n                })\r\n            }\r\n        }\r\n    }, [socket, isHost])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('new-match', function ([newMatch, updateBoard, user1, user2]) {\r\n                setMatch(newMatch);\r\n                setHostPlayer(user1);\r\n                setGuestPlayer(user2);\r\n                setNewSquare(Array(updateBoard.size * updateBoard.size).fill(null));\r\n                setIsWin(false);\r\n                setWinLine(null);\r\n                setHostPlayerId(user1._id);\r\n                setGuestPlayerId(user2._id);\r\n                setDisplayHandOver(true);\r\n                if (!isStart) setIsStart(true);\r\n\r\n                setCanLeaveRoom(false);\r\n            });\r\n        };\r\n        return () => {\r\n            if (socket) {\r\n                // nghe xong xóa\r\n                socket.removeAllListeners('new-match', function () {\r\n                })\r\n            }\r\n        }\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on(\"receive\", function ([squares, msg]) {\r\n                setMessage(msg);\r\n                setNewSquare(squares);\r\n                setSecond(duration);\r\n                setOppSecond(null);\r\n                setIsTypePlay(false);\r\n            });\r\n        };\r\n        return () => {\r\n            if (socket) {\r\n                // nghe xong xóa\r\n                socket.removeAllListeners('receive', function () {\r\n                })\r\n            }\r\n        }\r\n    }, [socket, duration])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on(\"win-game\", function ([line, msg]) {\r\n                console.log('win game', isHost);\r\n                setDisplayHandOver(false);\r\n                setMessageWin(msg);\r\n                setIsWin(true);\r\n                if (line) {\r\n                    setWinLine(line);\r\n                }\r\n                if (isHost) {\r\n                    console.log('ready');\r\n                    setReadyStart(true);\r\n                }\r\n\r\n                // if (isHost) {\r\n                //     dispatch(updateHostStatistic(JSON.parse(sessionStorage.currentuser)._id));\r\n                //     dispatch(updateGuestStatistic(guestPlayerId));\r\n                // }\r\n                // else {\r\n                //     dispatch(updateHostStatistic(hostPlayerId));\r\n                //     dispatch(updateGuestStatistic(guestPlayerId));\r\n                // }\r\n\r\n                setCanLeaveRoom(true);\r\n            });\r\n        };\r\n        return () => {\r\n            if (socket) {\r\n                // nghe xong xóa\r\n                socket.removeAllListeners('win-game', function () {\r\n                })\r\n            }\r\n        }\r\n    }, [socket, isHost])\r\n\r\n    useEffect(() => {\r\n        console.log('call countdown', isWin, second);\r\n        let timer;\r\n        let oppTimer;\r\n\r\n        if (isWin) {\r\n            clearTimeout(timer);\r\n            clearTimeout(oppTimer);\r\n            setSecond(null);\r\n            setOppSecond(null);\r\n        }\r\n        else if (!isTypePlay && second > 0) {\r\n            timer = setTimeout(() => {\r\n                setSecond(second - 1);\r\n            }, 1000);\r\n            setOppSecond(null);\r\n        }\r\n        else if (!isTypePlay && second === 0) {\r\n            handleWinGame(null);\r\n            setSecond(null);\r\n        }\r\n        else if (isTypePlay && oppSecond > 0) {\r\n            oppTimer = setTimeout(() => {\r\n                setOppSecond(oppSecond - 1);\r\n            }, 1000);\r\n            setSecond(null);\r\n        }\r\n        else if (isTypePlay && oppSecond === 0) {\r\n            setOppSecond(null);\r\n        }\r\n\r\n        return () => {\r\n            if (!second && isTypePlay) {\r\n                clearTimeout(timer);\r\n            }\r\n            else if (!oppSecond && !isTypePlay) {\r\n                clearTimeout(oppTimer);\r\n            }\r\n        }\r\n    }, [second, oppSecond, isWin]);\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('update-ui-leave-room', function (newBoard) {\r\n                setIsHost(false);\r\n                // handleWinGame\r\n                //const idLoser = match.id_user1 === JSON.parse(sessionStorage.currentuser)._id ? match.id_user2 : match.id_user1;\r\n                //const msg = JSON.parse(sessionStorage.currentuser)._id + ' chiến thắng ' + idLoser;\r\n                //socket.emit('win-game', [match._id, JSON.parse(sessionStorage.currentuser)._id, idLoser, null, msg]);\r\n                //setIsWin(true);\r\n                dispatch(boardUpdated({ newBoard: newBoard }));\r\n                board = newBoard;\r\n                \r\n                if (board.id_user1 === JSON.parse(sessionStorage.currentuser)._id) {\r\n                    setIsHost(true);\r\n                    dispatch(addHostAndGuest({ hostUser: JSON.parse(sessionStorage.currentuser), guestUser: null }));\r\n                    setHostPlayerId(board.id_user1);\r\n                    setHostPlayer(null);\r\n                    setGuestPlayerId(\"\");\r\n                    setReadyStart(false);\r\n                    //setCanPlay(true);\r\n                }\r\n                setDuration(parseInt(board.time));\r\n                \r\n                // axios.get(\"api/users/id/\" + board.id_user1)\r\n                //     .then(res => {\r\n                //         if (res.data.data) {\r\n                //             const user1 = res.data.data.user;\r\n                //             if (!board.id_user2) {\r\n                //                 dispatch(addHostAndGuest({ hostUser: user1, guestUser: null }));\r\n                //             }\r\n                //             else {\r\n                //                 axios.get(\"api/users/id/\" + board.id_user2)\r\n                //                     .then(res => {\r\n                //                         if (res.data.data) {\r\n                //                             const user2 = res.data.data.user;\r\n                //                             dispatch(addHostAndGuest({ hostUser: user1, guestUser: user2 }))\r\n                //                         }})\r\n                //                     .catch(err => {})\r\n                //             }\r\n                //             setHostPlayerId(board.id_user1);\r\n                //             setIsStart(false);\r\n                //             setReadyStart(false);\r\n                //         }\r\n                //     })\r\n                //     .catch(err => {})\r\n                //     if (board.id_user1 === JSON.parse(sessionStorage.currentuser)._id) {\r\n                //         setIsHost(true);\r\n                //     }\r\n                //     setDuration(parseInt(board.time));\r\n            });\r\n        }\r\n        return () => {\r\n            if (socket) {\r\n                // nghe xong xóa\r\n                socket.removeAllListeners('update-ui-leave-room', function () {\r\n                })\r\n            }\r\n        }\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            leaveRoom();\r\n        };\r\n    }, []);\r\n\r\n    function leaveRoom() {\r\n        socket.emit('leave-room');\r\n        window.location.href = '/play';\r\n    }\r\n\r\n    function handlePlayGame(squares) {\r\n        const currentPlayer = match.id_user1 === JSON.parse(sessionStorage.currentuser)._id ? hostPlayer.displayname : guestPlayer.displayname;\r\n        const nextPlayer = match.id_user1 === JSON.parse(sessionStorage.currentuser)._id ? guestPlayer.displayname : hostPlayer.displayname;\r\n        const msg = currentPlayer + ' đã đi -> Đến lượt ' + nextPlayer;\r\n        socket.emit('play-caro', [match._id, squares, msg]);\r\n        setSecond(null);\r\n        setOppSecond(duration);\r\n        setIsTypePlay(true);\r\n        setMessage(msg);\r\n    }\r\n    function handleWinGame(line) {\r\n        let msg;\r\n        const currentPlayer = match.id_user1 === JSON.parse(sessionStorage.currentuser)._id ? hostPlayer.displayname : guestPlayer.displayname;\r\n        const nextPlayer = match.id_user1 === JSON.parse(sessionStorage.currentuser)._id ? guestPlayer.displayname : hostPlayer.displayname;\r\n        const idLoser = match.id_user1 === JSON.parse(sessionStorage.currentuser)._id ? match.id_user2 : match.id_user1;\r\n        if (line) {\r\n            msg = currentPlayer + ' chiến thắng ' + nextPlayer;\r\n        } else {\r\n            msg = nextPlayer + ' chiến thắng ' + currentPlayer;\r\n        }\r\n        socket.emit('win-game', [match._id, JSON.parse(sessionStorage.currentuser)._id, idLoser, line, msg]);\r\n    }\r\n\r\n\r\n    function renderHistoryList() {\r\n        // axios.get('boards/gethistory/'+board.code)\r\n        //     .then(res => {\r\n        //         console.log(res);\r\n        //         setHistory(res.data.data);\r\n        //     })\r\n        //     .catch(err => {\r\n        //         console.log(err);\r\n        //     })\r\n    }\r\n\r\n    function handleReplay() {\r\n\r\n    }\r\n\r\n    function startGame() {\r\n        socket.emit('start-game');\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.root} style={{ alignItems: 'stretch', background: 'transparent' }} >\r\n                <div style={{ width: '590px' }}>\r\n                    {/* <Game dimension={board ? board.size : 0}\r\n                            handlePlayGame={(squares) => handlePlayGame(squares)}\r\n                            handleWinGame={(line) => handleWinGame(line)}\r\n                            handleReplay={() => handleReplay()}\r\n                            newSquares={newSquare}\r\n                            newWinLine={winLine}\r\n                            isWin={isWin}\r\n                        /> */}\r\n                    {isStart ? (<Game dimension={board ? board.size : 0}\r\n                        handlePlayGame={(squares) => handlePlayGame(squares)}\r\n                        handleWinGame={(line) => handleWinGame(line)}\r\n                        handleReplay={() => handleReplay()}\r\n                        newSquares={newSquare}\r\n                        newWinLine={winLine}\r\n                        isWin={isWin}\r\n                    />) : null}\r\n                </div>\r\n                <div style={{ background: '#0ace5b', width: '200px' }}>\r\n                    <div>\r\n                        <div style={{ flexGrow: 1 }}>\r\n                            <Typography className={classes.title} variant='h5' component='h6'>\r\n                                Tên phòng: {board ? board.title : 'XO'}\r\n                            </Typography >\r\n                            <Typography className={classes.title} variant='h6' component='h6'>\r\n                                Miêu tả: {board ? board.description : 'etc'}\r\n                            </Typography>\r\n                            <Grid container style={{ marginBottom: '5px', marginLeft: '10px' }}>\r\n                                <Grid style={{ width: '90px', marginRight: '5px' }}>\r\n                                    {isHost ? (\r\n                                        <Button onClick={() => { \r\n                                            startGame(); \r\n                                            setReadyStart(false) \r\n                                    }} disabled={!readyStart} variant=\"contained\" color=\"secondary\">\r\n                                            Bắt đầu\r\n                                        </Button>)\r\n                                        : null}\r\n                                </Grid>\r\n                                <Grid style={{width: '90px'}}>\r\n                                    <Button onClick={() => {\r\n                                        leaveRoom();\r\n                                    }} disabled={!canLeaveRoom} variant=\"contained\" color=\"primary\">\r\n                                        Rời bàn\r\n                                    </Button>\r\n                                </Grid>\r\n                                {/*<Grid item xs={3}>\r\n                                    <Button onClick={() => {\r\n                                        setReplay(true);\r\n                                        handlePlayGame(Array(board.size*board.size).fill(null));\r\n                                        setNewSquare(Array(board.size*board.size).fill(null));\r\n                                        setWinLine(null);\r\n                                    }}  variant=\"contained\" color=\"primary\"\r\n                                    disabled={replay}>\r\n                                        Chơi lại\r\n                                    </Button>\r\n                                </Grid>*/}\r\n                                {/*<Grid style={{width: '90px'}}>\r\n                                    <Button onClick={() => {\r\n                                        setOpenHistory(true);\r\n                                        renderHistoryList();\r\n                                    }} variant=\"contained\" color=\"primary\">\r\n                                        Xem lịch sử\r\n                                    </Button>\r\n                                </Grid>*/}\r\n                                {isStart && displayHandOver ? (<Grid item xs={3}>\r\n                                    <Button onClick={() => {\r\n                                        handleWinGame(null);\r\n                                    }} variant=\"contained\" color=\"primary\">\r\n                                        Xin đầu hàng\r\n                                    </Button>\r\n                                </Grid>) : null}\r\n                            </Grid>\r\n                            {isWin ? (<Typography style={{ fontSize: '12px', marginLeft: '2px', color: 'red', marginBottom: '-10px', height: '30px' }}>{messageWin}</Typography>) :\r\n                                (<React.Fragment>\r\n                                    <Typography style={{ fontSize: '12px', marginLeft: '2px', color: 'blue', marginBottom: '-10px', height: '30px' }}>{message}</Typography>\r\n                                    {/* {second === -1 ? (<Typography />) : (<Typography>Thời gian: {second}s</Typography>)} */}\r\n                                </React.Fragment>)}\r\n                        </div>\r\n                        <PlayingUserList second={second} oppSecond={oppSecond} hostPlayerId={hostPlayerId} />\r\n                    </div>\r\n                    {/* <div>\r\n                        <Audience />\r\n                    </div> */}\r\n                </div>\r\n                <div>\r\n                    <Chat socket={socket} board={board} match={match} />\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog open={openHistory} onClose={() => setOpenHistory(false)} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle>Lịch sử chơi game</DialogTitle>\r\n                <DialogContent>\r\n                    <List>\r\n                        {\r\n                            history ? history.map(el => (\r\n                                <ListItem>\r\n                                    {/*<ListItemText*/}\r\n                                    {/*    primary={`${el.date} - ${el.winner.displayname} win`}*/}\r\n                                    {/*/>*/}\r\n                                    <Typography style={{ color: 'blue' }}>{`${el.date} | \"${el.winner.displayname}\" THẮNG`}</Typography>\r\n                                </ListItem>\r\n                            )) : null\r\n                        }\r\n                    </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { setOpenHistory(false); }} color=\"danger\">\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}",["304","305"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\Profile\\index.js",["306","307","308","309"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState, useLocation } from 'react';\r\nimport axios from '../../../../utils/axios';\r\nimport convertAvatarPropToString from '../../../../utils/binaryToString';\r\nimport getFormattedDate from '../../../../utils/date';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    infoLineStyle: {\r\n        display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignContent: 'flex-end'\r\n    },\r\n    labelStyle: {\r\n        marginTop: 7,\r\n        marginRight: 20,\r\n        textAlign: 'left'\r\n    }\r\n}));\r\nexport default function Profile({}) {\r\n    const classes = useStyles();\r\n    let [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('currentuser')));\r\n    let [displayname, setDisplayname] = useState(currentUser.displayname);\r\n    let [password, setPassword] = useState(currentUser.password);\r\n    let [avatar, setAvatar] = useState(currentUser.avatar);\r\n    //let [statistic, setStatistic] = useState();\r\n    let [fileName, setFileName] = useState(\"\");\r\n\r\n    const inputSize = 250;\r\n    \r\n    useEffect(() => {\r\n        \r\n    }, [displayname, password, avatar]);\r\n    \r\n    async function updateProfile() {\r\n        const newUsername = document.getElementsByName(\"username\")[0].value;\r\n        const newPassword = document.getElementsByName(\"password\")[0].value;\r\n        const retypePassword = document.getElementsByName(\"retypepassword\")[0].value;\r\n        const newDisplayName = document.getElementsByName(\"displayname\")[0].value;\r\n        \r\n        if (newPassword != retypePassword) {\r\n            alert(\"Nhập lại mật khẩu không đúng\");\r\n            return;\r\n        }\r\n        if (newUsername.length < 5 || newUsername.length > 50 || newDisplayName.length < 5 || newDisplayName.length > 50) {\r\n            alert(\"Username hoặc display name phải từ 5 đến 50 kí tự\");\r\n            return;\r\n        }\r\n        if (newPassword.length > 0 && newPassword.length < 6) {\r\n            alert(\"Password phải từ 6 kí tự trở lên\");\r\n            return;\r\n        }\r\n\r\n        const api = await axios.post(\"api/users/update-profile\", {iduser: currentUser._id, newPassword: newPassword, newDisplayName: newDisplayName, fileName: fileName});\r\n        alert(api.data.message);\r\n        if (api.data.data) {\r\n            setCurrentUser(api.data.data);\r\n            setDisplayname(api.data.data.displayname);\r\n            setPassword(api.data.data.password);\r\n            setAvatar(api.data.data.avatar);\r\n            sessionStorage.setItem('currentuser', JSON.stringify(currentUser));\r\n        }\r\n    }\r\n\r\n    const statistic = \"Đã chơi \" + currentUser.total_match + \", thắng \" + currentUser.win_match + \", tỉ lệ \" + currentUser.win_percent + \"%\";\r\n    return (\r\n        <div id=\"login-box\" style={{background: 'lavender', marginBottom: '0px', height: '600px', width: '800px'}}>\r\n            <form onSubmit={(e) => {e.preventDefault(); updateProfile(); }}  class=\"left\" style={{marginLeft: '50px'}}>\r\n                <h1 style={{color: 'red'}}>PROFILE</h1>\r\n                <div style={{display: 'inline-flex'}}>\r\n                    <div style={{display: 'inline-block'}}>\r\n                        <div className={classes.infoLineStyle}>\r\n                            <label className={classes.labelStyle}>Username</label>\r\n                            <input type=\"text\" name=\"username\" value={currentUser.username} size={inputSize} style={{marginRight: '10px'}}/>\r\n                        </div>\r\n                        <div className={classes.infoLineStyle}>\r\n                            <label className={classes.labelStyle}>DisplayName</label>\r\n                            <input type=\"text\" name=\"displayname\" defaultValue={displayname} size={inputSize}/>\r\n                        </div>\r\n                        <div className={classes.infoLineStyle}>\r\n                            <label className={classes.labelStyle}>JoinDate</label>\r\n                            <input type=\"text\" name=\"joindate\" defaultValue={getFormattedDate(new Date(currentUser.join_date))} size={inputSize} disabled=\"true\"/>\r\n                        </div>\r\n                        <div className={classes.infoLineStyle}>\r\n                            <label className={classes.labelStyle}>Statistic</label>\r\n                            <input type=\"text\" name=\"matchstatistic\" defaultValue={statistic} size={inputSize} disabled=\"true\"/>\r\n                        </div>\r\n                        <div className={classes.infoLineStyle}>\r\n                            <label className={classes.labelStyle}>Cup</label>\r\n                            <input type=\"text\" name=\"cup\" defaultValue={currentUser.cup} size={inputSize} disabled=\"true\"/>\r\n                        </div>\r\n                        <div className={classes.infoLineStyle}>\r\n                            <label className={classes.labelStyle}>Email</label>\r\n                            <input type=\"text\" name=\"email\" value={currentUser.email} size={inputSize}/>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    <div style={{display: 'inline-block', flex: 'right', marginLeft: '50px'}}>\r\n                        <div>Avatar</div>\r\n                        <img style={{width: '200px', height: '200px'}} src={convertAvatarPropToString(avatar)}/>\r\n                        <input id=\"fileName\" type=\"file\" onChange={() =>{ setFileName(\"D:/\" + document.getElementById(\"fileName\").files[0].name); }}/>\r\n                    </div>\r\n                </div>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Type new password if you need. If not, type again old password\" style={{width: '450px'}} required/>\r\n                <input type=\"password\" name=\"retypepassword\" placeholder=\"Retype password\" style={{width: '450px'}} required/>\r\n                <input type=\"submit\" name=\"signup_submit\" value=\"UPDATE PROFILE\" style={{width: '150px'}}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\OnlineUserList\\index.js",["310","311","312","313","314","315","316","317","318","319","320","321","322"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FixedSizeList } from 'react-window';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport UserInfoDialog from '../UserInfoDialog/index.js';\r\nimport io from \"socket.io-client\";\r\n\r\nimport axios from \"../../../utils/axios\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//import { userInfoDialogUpdate } from '../../../store/slice/userInfoDialogSlice';\r\nimport { fetchUserInfoDialog } from '../../../store/slice/userInfoDialogSlice';\r\nimport { selectOnlineUser, selectOpenOnlineUserList, openOnlineUserList, closeOnlineUserList } from '../../../store/slice/onlineUsersSlice';\r\nimport convertAvatarPropToString from '../../../utils/binaryToString';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: '#87CEFA',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n}));\r\n\r\n//const socket = io('http://localhost:8000');\r\n\r\nexport default function OnlineUserList() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const onlineUserList = useSelector(selectOnlineUser);\r\n    const isOpenOnlineUserList = useSelector(selectOpenOnlineUserList);\r\n\r\n    let [onlineUserListView, setOnlineUserListView] = useState([]);\r\n    //let [avatar, setAvatar] = useState(null);\r\n    //let imgSrc = \"/img/user-icon.jpg\";\r\n    useEffect(() => {\r\n        renderOnlineUserList();\r\n    }, [onlineUserList.length]);\r\n\r\n    function renderOnlineUserItem(iduser, displayname, avatar) {\r\n        // axios.get(\"api/users/id/\" + iduser)\r\n        //     .then(res => {\r\n        //         setAvatar(res.data.data.user.avatar);\r\n        //     })\r\n        //     .catch(error => { })\r\n        return (\r\n            <ListItem key={iduser} button>\r\n                <Button id={iduser} onClick={() => displayUserInfoDialog(iduser)}>\r\n                    <Avatar variant=\"circle\" src={convertAvatarPropToString(avatar)} style={{width: 40, height: 40, marginRight: 10}}></Avatar>\r\n                    <ListItemText style={{color: 'greenyellow'}} primary={displayname} />\r\n                </Button>\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    function renderOnlineUserList() {\r\n        let result = [];\r\n        onlineUserList.map((onlineUserItem) => result.push(renderOnlineUserItem(onlineUserItem.iduser, onlineUserItem.displayname, onlineUserItem.avatar)));\r\n        //return result;\r\n        setOnlineUserListView(result);\r\n    }\r\n\r\n    async function displayUserInfoDialog(iduser) {\r\n        await dispatch(fetchUserInfoDialog({iduser}));\r\n    }\r\n\r\n    let minimizeImg = { cursor: 'pointer', float: 'right', marginTop: '5px', width: '20px',  };\r\n    let maximizeImg = { cursor: 'pointer', float: 'right', marginTop: '5px', width: '20px',  };\r\n    return (\r\n        <div style={{marginLeft: 20, height: 500}}>\r\n            <div hidden={!isOpenOnlineUserList} style={{ backgroundImage: 'url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSF8tq7J9mu_6vdiGTDAMwY9hC5t_ti2ukrhg&usqp=CAU\")', width: 220 }}>\r\n                <img src='https://aux.iconspalace.com/uploads/2024895475923021781.png' style={minimizeImg} onClick={() => { dispatch(closeOnlineUserList()) }} />\r\n                <Typography className={classes.title} variant=\"h5\" component=\"h2\" gutterBottom color=\"primary\">\r\n                    Kỳ thủ\r\n                </Typography>\r\n                <List>\r\n                    {onlineUserListView}\r\n                </List>\r\n            </div>\r\n            <div hidden={isOpenOnlineUserList} style={{ backgroundImage: 'url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSF8tq7J9mu_6vdiGTDAMwY9hC5t_ti2ukrhg&usqp=CAU\")', width: 220 }}>\r\n                <img src='https://cdn3.iconfinder.com/data/icons/cosmo-color-player-2/40/window_fullscreen_1-512.png' style={maximizeImg} onClick={() => { dispatch(openOnlineUserList()) }} />\r\n                <Typography className={classes.title} variant=\"h5\" component=\"h2\" gutterBottom color=\"primary\">\r\n                    Kỳ thủ\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\userInfoDialogSlice.js",["323","324"],"import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createSelector,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit';\r\nimport axios from \"../../utils/axios\";\r\n\r\nconst userInfoDialogAdapter = createEntityAdapter();\r\n\r\nconst initialState = [{\r\n    isOpen: false,\r\n    idUser: \"\",\r\n    displayName: \"\",\r\n    statistic: \"\",\r\n    cup: 0,\r\n    avatar: null\r\n}];\r\n\r\nexport const fetchUserInfoDialog = createAsyncThunk(\r\n    'userInfoDialog/fetchUserInfoDialog',\r\n    async (initialUserInfoDialog) => {\r\n        const response = await axios.get(\"api/users/id/\" + initialUserInfoDialog.iduser);\r\n        \r\n        return response.data.data.user;\r\n\r\n    } \r\n)\r\n\r\nconst userInfoDialogSlice = createSlice({\r\n    name: 'userInfoDialog',\r\n    initialState,\r\n    reducers: {\r\n        closeUserInfoDialog(state) {\r\n            state[0].isOpen = false;\r\n        }\r\n        // userInfoDialogUpdate(state, action) {\r\n        //     const { displayName, totalMatch, winMatch, winPercent, cup } = action.payload;\r\n        //     state[0].displayName = displayName;\r\n        //     state[0].totalMatch = totalMatch;\r\n        //     state[0].winMatch = winMatch;\r\n        //     state[0].winPercent = winPercent;\r\n        //     state[0].cup = cup;\r\n        //     //userInfoDialogAdapter.upsertOne(state, action.payload);\r\n        // }\r\n    },\r\n    extraReducers: {\r\n        [fetchUserInfoDialog.fulfilled]: (state, action) => {\r\n            const user = action.payload;\r\n            state[0] = {\r\n                isOpen: true,\r\n                idUser: user._id, \r\n                displayName: user.displayname,\r\n                statistic: \"Đã chơi \" + user.total_match + \", thắng \" + user.win_match + \", tỉ lệ \" + user.win_percent + \"%\",\r\n                cup: user.cup,\r\n                joinDate: user.join_date,\r\n                avatar: user.avatar\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n// function getFormattedDate(date) {\r\n//     var year = date.getFullYear();\r\n  \r\n//     var month = (1 + date.getMonth()).toString();\r\n//     month = month.length > 1 ? month : '0' + month;\r\n  \r\n//     var day = date.getDate().toString();\r\n//     day = day.length > 1 ? day : '0' + day;\r\n    \r\n//     return day + '/' + month + '/' + year;\r\n//   }\r\n\r\n//export const {userInfoDialogUpdate} = userInfoDialogSlice.actions;\r\nexport const { closeUserInfoDialog } = userInfoDialogSlice.actions;\r\nexport default userInfoDialogSlice.reducer;\r\n\r\nexport const selectUserInfoDialog = (state) => state.userInfoDialog[0];\r\n// export const {\r\n//     selectAll: selectAllUserInfoDialog,\r\n// } = userInfoDialogAdapter.getSelectors((state) => state.userInfoDialog);",["325","326"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\users\\index.js",["327"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\Chat\\index.js",["328","329","330","331","332","333","334","335","336","337","338","339","340","341","342"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from '../../utils/axios';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\n//const socket = io('http://localhost:8000');\r\n\r\nexport default function Chat({socket, board, match}) {\r\n    const classes = useStyles();\r\n    \r\n    const [inp, setInp] = useState(\"\");\r\n    const [newMess, setNewMess] = useState();\r\n    const [arrayMessage, setArrayMessage] = useState([]);\r\n\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('currentuser')));\r\n\r\n    let [itemChatList, setItemChatList] = useState([<li></li>]);\r\n\r\n    function getItemChatList() {\r\n        if (board) {\r\n            axios.get('messages/boardid/' + board._id)\r\n            .then(res => {\r\n                let messageList = res.data.data;\r\n                let currentItemChatList = [];\r\n                messageList.map((messageItem) => {\r\n                    let itemChatContent = messageItem.fromDisplayName + \": \" + messageItem.content;\r\n                    currentItemChatList.push(renderItemChat(itemChatContent));\r\n                })\r\n                setItemChatList(currentItemChatList);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getItemChatList();\r\n        \r\n    }, [itemChatList.length, board])\r\n\r\n    // Lắng nge khi trong room có người chat\r\n    useEffect(() => {\r\n        if (socket) {\r\n            // nghe tin nhắn từ room\r\n            socket.on('update-area-chat', function(data) {\r\n            // console.log(\"room message:\", data);\r\n            // setNewMess(data);\r\n            // let newArr = [...arrayMessage];\r\n            // newArr.push(data);\r\n            // // cập nhật giao diện\r\n            // setArrayMessage(newArr);\r\n    \r\n            //getItemChatList();\r\n            let newItemChatList = itemChatList.slice();\r\n            let newItemChatContent = data.fromDisplayName + \": \" + data.content;\r\n            newItemChatList.push(renderItemChat(newItemChatContent));\r\n            setItemChatList(newItemChatList);\r\n            \r\n            })\r\n        }\r\n        return () => {\r\n            if(socket){\r\n            // nghe xong xóa\r\n            socket.removeAllListeners('update-area-chat', function(){ })\r\n            }\r\n        }\r\n        // chỉ kích hoạt lại khi socket thay đổi\r\n    }, [socket])\r\n\r\n    function renderItemChat(itemChatContent) {\r\n        return (<li>{itemChatContent}</li>)\r\n    }\r\n\r\n    function submitChat(e) {\r\n        e.preventDefault();\r\n        \r\n        let content = document.getElementById(\"content\").value;\r\n        if (!content) {\r\n            alert('Vui lòng nhập nội dung chat');\r\n            return;\r\n        }\r\n        if (!currentUser) {\r\n            alert('Vui lòng đăng nhập để chat');\r\n            return;\r\n        }\r\n        document.getElementById(\"content\").value = \"\";\r\n        if (socket) {\r\n            let idMatch = match ? match._id : \"\";\r\n            socket.emit('send-message', {fromUsername: currentUser.username, fromDisplayName: currentUser.displayname, \r\n                fromBoardId: board._id, fromBoardMatch: idMatch, content: content});\r\n        }\r\n        //getItemChatList();\r\n        let newItemChatList = itemChatList.slice();\r\n        let newItemChatContent = currentUser.displayname + \": \" + content;\r\n        newItemChatList.push(renderItemChat(newItemChatContent));\r\n        setItemChatList(newItemChatList);\r\n\r\n    }\r\n    // socket.on('update-area-chat', function (data) {\r\n    //     getItemChatList();\r\n    //     let newItemChatContent = data.fromDisplayName + \": \" + data.content;\r\n    //     let currentItemChatList = itemChatList.slice();\r\n    //     currentItemChatList.push(renderItemChat(newItemChatContent));\r\n    //     setItemChatList(currentItemChatList);\r\n    // });\r\n\r\n    return (\r\n        <div style={{width: 228, backgroundImage: 'url(\"https://i.gifer.com/3w8M.gif\")'}}>\r\n            <div style={{height: 50, color: 'red', textAlign: 'center'}}>\r\n                <h1>Chat</h1>\r\n            </div>\r\n            <div  style={{borderWidth: 'thin', borderStyle: 'solid', borderColor: 'black', height: '550px', overflowX: 'hidden'}}>\r\n                <ul id=\"chatAreaContent\" style={{textAlign: 'left', listStyleType: 'none', display: 'inline'}}>\r\n                    {itemChatList}\r\n                </ul>\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                <textarea id=\"content\" name=\"content\" placeholder=\"Nhập tin nhắn...\" style={{width: 200, marginTop: 5}}>{inp}</textarea>\r\n                <input type=\"submit\" value=\"Gửi\" style={{width: 40, marginLeft: 5, marginTop: 15}} onClick={(e) => submitChat(e)}></input>\r\n            </div>\r\n        </div>\r\n    )\r\n}",["343","344"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\matches\\index.js",["345","346","347","348"],"import { React } from 'react';\r\nimport { List, Datagrid, TextField, EditButton, ReferenceArrayField, DateField, Show, SimpleShowLayout, Edit, Filter, TextInput, ReferenceField  } from 'admin-on-rest';\r\nimport MessagesList from \"./messages\";\r\n\r\nexport const MatchList = (props) => {\r\n    return (\r\n        <List {...props}>\r\n            <Datagrid>\r\n                <TextField label=\"Tên phòng\" source=\"boardName\"/>\r\n                <ReferenceField label=\"Chủ phòng\" source=\"id_user1\" reference=\"users\">\r\n                    <TextField source=\"displayname\"/>\r\n                </ReferenceField>\r\n                <ReferenceField label=\"Người chơi\" source=\"id_user2\" reference=\"users\">\r\n                    <TextField source=\"displayname\"/>\r\n                </ReferenceField>\r\n                <ReferenceField label=\"Người thắng\" source=\"win\" reference=\"users\">\r\n                    <TextField source=\"displayname\"/>\r\n                </ReferenceField>\r\n                <DateField label=\"Thời gian\" source=\"createdAt\" showTime/>\r\n                <EditButton label=\"Xem\"/>\r\n            </Datagrid>\r\n        </List>\r\n    );\r\n}\r\n\r\n// export const MatchShow = (props) => (\r\n//     <Show {...props}>\r\n//         <SimpleShowLayout>\r\n//             <ReferenceField label=\"Chủ phòng\" source=\"id_user1\" reference=\"users\">\r\n//                 <TextField source=\"displayname\"/>\r\n//             </ReferenceField>\r\n//             <ReferenceField label=\"Người chơi\" source=\"id_user2\" reference=\"users\">\r\n//                 <TextField source=\"displayname\"/>\r\n//             </ReferenceField>\r\n//             <ReferenceField label=\"Người thắng\" source=\"win\" reference=\"users\">\r\n//                 <TextField source=\"displayname\"/>\r\n//             </ReferenceField>\r\n//             <DateField label=\"Thời gian\" source=\"createdAt\" showTime/>\r\n//         </SimpleShowLayout>\r\n//     </Show>\r\n// )\r\n\r\nexport const MatchEdit = (props) => (\r\n    <Show {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField label=\"Tên phòng\" source=\"id_board.title\"/>\r\n            <ReferenceField label=\"Chủ phòng\" source=\"id_user1\" reference=\"users\">\r\n                <TextField source=\"displayname\"/>\r\n            </ReferenceField>\r\n            <ReferenceField label=\"Người chơi\" source=\"id_user2\" reference=\"users\">\r\n                <TextField source=\"displayname\"/>\r\n            </ReferenceField>\r\n            <ReferenceField label=\"Người thắng\" source=\"win\" reference=\"users\">\r\n                <TextField source=\"displayname\"/>\r\n            </ReferenceField>\r\n            <DateField label=\"Thời gian\" source=\"createdAt\" showTime/>\r\n            <TextField label=\"Miêu tả\" source=\"id_board.description\"/>\r\n            <TextField label=\"Thời gian nước đi\" source=\"id_board.time\"/>\r\n            <TextField label=\"Mật khẩu\" source=\"id_board.password\"/>\r\n           <MessagesList source=\"messages\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n)","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\onlineUsersSlice.js",["349","350","351","352","353"],"import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createSelector,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit';\r\n\r\nimport axios from \"../../utils/axios\";\r\n\r\nconst onlineUsersAdapter = createEntityAdapter({\r\n    selectId: (user) => user._id\r\n});\r\n\r\nconst initialState = [true];\r\n\r\nconst onlineUserSlice = createSlice({\r\n    name: 'onlineUsers',\r\n    initialState,\r\n    reducers: {\r\n        onlineUserUpdated(state, action) {\r\n            const { listOnlineUser } = action.payload;\r\n            while (state.length > 1) {\r\n                state.pop();\r\n            }\r\n            listOnlineUser.map((item) => {\r\n                state.push(item);\r\n            })\r\n        },\r\n        closeOnlineUserList(state) {\r\n            state[0] = false;\r\n        },\r\n        openOnlineUserList(state) {\r\n            state[0] = true;\r\n        }\r\n    }\r\n    \r\n});\r\n\r\nexport const { onlineUserUpdated, openOnlineUserList, closeOnlineUserList } = onlineUserSlice.actions\r\nexport default onlineUserSlice.reducer;\r\n\r\nexport const selectOnlineUser = (state) =>  state.onlineUsers.slice(1);\r\nexport const selectOpenOnlineUserList = (state) => state.onlineUsers[0];","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\MatchHistory\\MatchHistoryItem\\index.js",["354","355","356","357","358","359","360","361","362"],"import { useState, useEffect } from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { selectMatchHistoryItem } from '../../../../../store/slice/matchHistoryItemSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport HistoryGame from './HistoryGame';\r\nimport HistoryChat from './HistoryChat';\r\nimport PlayingUserList from '../../../../../components/PlayingUserList';\r\nimport { fetchUserInfoDialog } from '../../../../../store/slice/userInfoDialogSlice';\r\nimport { addHostAndGuest } from '../../../../../store/slice/playingUsersSlice';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport axios from '../../../../../utils/axios';\r\nimport getFormattedDate from '../../../../../utils/date';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navigationStyle: {\r\n        backgroundColor: 'aqua',\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden'\r\n    },\r\n    playingUserInfoStyle: {\r\n        width: 150, \r\n        height: 150, \r\n        justifyContent: 'center', \r\n        borderWidth: 3\r\n    },\r\n    title: {\r\n        color: 'blue',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default function MatchHistoryItem(){\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const flexContainer = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        padding: 0,\r\n    };\r\n    const matchHistoryItem = useSelector(selectMatchHistoryItem);\r\n    const [moveListView, setMoveListView] = useState([]);\r\n    const [squares, setSquares] = useState(matchHistoryItem.step[0].squares);\r\n    const [message, setMessage] = useState(\"Game start\");\r\n\r\n    let oldMoveListButton;\r\n    const [createdAt, setCreatedAt] = useState(null);\r\n    useEffect(() => {\r\n        axios.get(\"api/users/id/\" + matchHistoryItem.id_user1)\r\n            .then(res => {\r\n                if (res.data.data) {\r\n                    const user1 = res.data.data.user;\r\n                    axios.get(\"api/users/id/\" + matchHistoryItem.id_user2)\r\n                        .then(res => {\r\n                            if (res.data.data) {\r\n                                const user2 = res.data.data.user;\r\n                                dispatch(addHostAndGuest({ hostUser: user1, guestUser: user2 }))\r\n                            }})\r\n                        .catch(err => {})\r\n                }\r\n            })\r\n            .catch(err => {})\r\n\r\n        setCreatedAt(getFormattedDate(new Date(matchHistoryItem.createdAt)));\r\n        renderMoveList();\r\n    }, [matchHistoryItem.step.length]);\r\n\r\n    function renderMoveList() {\r\n        const moves = matchHistoryItem.step.map((step, move) => {\r\n            const desc = move ?\r\n              'Go to move #' + move :\r\n              'Go to game start';\r\n            const bg = move ?\r\n                'blue' : 'red';\r\n            return (\r\n              <li key={move} >\r\n                <button id={move} style={{background: bg, color: 'white'}} onClick={(e) => selectMove(move, e)}>{desc}</button>\r\n              </li>\r\n            );\r\n        });\r\n        setMoveListView(moves);\r\n    }\r\n\r\n    function selectMove(move, e) {\r\n        jumpTo(move); \r\n        if (move) {\r\n            document.getElementById(\"0\").style.background = 'blue';\r\n        }\r\n        if (oldMoveListButton) {\r\n            oldMoveListButton.style.background = 'blue';\r\n        }\r\n        oldMoveListButton = e.currentTarget;\r\n        e.currentTarget.style.background = 'red';\r\n    }\r\n\r\n    function jumpTo(move) {\r\n        setSquares(matchHistoryItem.step[move].squares);\r\n        setMessage(matchHistoryItem.step[move].message);\r\n    }\r\n\r\n    return (\r\n        <div  style={{width: 'max-content', margin: 'auto', marginTop: '30px'}} >\r\n            <div>\r\n                <Typography className={classes.title} variant='h5' component='h6'>\r\n                    Tường thuật trận đấu giữa {matchHistoryItem.displayname_user1} và {matchHistoryItem.displayname_user2}\r\n                </Typography >\r\n                <Typography className={classes.title} variant='h5' component='h6'>\r\n                    Diễn ra vào {createdAt}\r\n                </Typography >\r\n                <Typography className={classes.title} variant='h5' component='h6'>\r\n                    Người thắng: {matchHistoryItem.displayname_win}\r\n                </Typography >\r\n                <Typography className={classes.title} variant='h5' component='h6'>\r\n                    Số nước đi: {matchHistoryItem.step.length}\r\n                </Typography >\r\n            </div>\r\n            <div className={classes.root}>\r\n                <div>\r\n                    <HistoryGame className={classes.root} squares={squares}/>\r\n                </div>\r\n                <div style={{background: '#0ace5b'}}>\r\n                    <div>\r\n                        <div style={{width: 200}}>\r\n                            <PlayingUserList second={null} oppSecond={null} hostPlayerId={matchHistoryItem.id_user1} />\r\n                        </div>\r\n                        {/* <List style={{ width: 200 }}>\r\n                            {userInfoView}\r\n                        </List> */}\r\n                    </div>\r\n                    <Typography variant=\"p\" component=\"p\" style={{fontWeight: 'bold', color: 'red', width: '150px', height:'80px', margin: 'auto', marginTop: '-15px'}} gutterBottom>\r\n                        {message}\r\n                    </Typography>\r\n                    <Typography className={classes.title} variant=\"p\" component=\"p\" style={{fontWeight: 'bold', marginTop: '-10px'}} gutterBottom>\r\n                        Move List\r\n                    </Typography>\r\n                    <div style={{overflowX: 'hidden', height: '90px'}}>\r\n                        <ul style={{listStyleType: 'none'}}>\r\n                            {moveListView}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <HistoryChat id_match={matchHistoryItem.id_match} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\binaryToString.js",[],["363","364"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\PlayingUserList\\index.js",["365","366","367","368","369","370","371","372","373","374","375","376"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUserInfoDialog } from '../../store/slice/userInfoDialogSlice';\r\nimport { selectPlayingUser, selectRerender } from '../../store/slice/playingUsersSlice';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport convertAvatarPropToString from '../../utils/binaryToString';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { set } from 'js-cookie';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    playingUserInfoStyle: {\r\n        width: 180, \r\n        height: 180, \r\n        justifyContent: 'center', \r\n        backgroundImage: 'url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSF8tq7J9mu_6vdiGTDAMwY9hC5t_ti2ukrhg&usqp=CAU\")'\r\n    }\r\n\r\n}));\r\n\r\nexport default function PlayingUserInfo({second, oppSecond, hostPlayerId }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const flexContainer = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        padding: 0\r\n    };\r\n    let playingUserList = useSelector(selectPlayingUser);\r\n    let rerender = useSelector(selectRerender);\r\n    let [playingUserListView, setPlayingUserListView] = useState([]);\r\n    let [currentUserId, setCurrentUserId] = useState(JSON.parse(sessionStorage.getItem('currentuser'))._id);\r\n\r\n    // useEffect(() => {\r\n    //     //renderPlayingUserListView();\r\n    //     //finishedRerender();\r\n    // }, [hostPlayerId, rerender]);\r\n\r\n    async function displayUserInfoDialog(iduser) {\r\n        await dispatch(fetchUserInfoDialog({iduser}));\r\n    }\r\n\r\n    if (!hostPlayerId) {\r\n        return (\r\n            <List style={{ width: '200px' }}></List>\r\n        );\r\n    }\r\n\r\n    if (currentUserId === hostPlayerId) {\r\n        return (\r\n            <List style={{ width: '200px' }}>\r\n                {playingUserList[0] ? (\r\n                    <ListItem key={playingUserList[0]._id}>\r\n                        <Card className={ classes.playingUserInfoStyle }>\r\n                            <CardContent>\r\n                                <div style={flexContainer}>\r\n                                    <Button onClick={() => displayUserInfoDialog(playingUserList[0]._id)}>\r\n                                        <Avatar variant=\"square\"  src={convertAvatarPropToString(playingUserList[0].avatar)} style={{width: 60, height: 60}}></Avatar>\r\n                                    </Button>\r\n                                    <div style={{marginLeft: 30, margin: 'auto'}}>\r\n                                        {/* <Typography className={classes.title} variant=\"h6\" component=\"h6\" style={{color: 'red', margin: 0}} gutterBottom>\r\n                                            {playingUser.score}\r\n                                        </Typography> */}\r\n                                        <Typography style={{color: 'orange', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                            {second}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{marginLeft: '5px'}}>\r\n                                    <Typography style={{color: 'greenyellow', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                        {playingUserList[0].displayname}\r\n                                    </Typography>\r\n                                    <Typography style={{color: 'red', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                        Cup: {playingUserList[0].cup}\r\n                                    </Typography>\r\n                                    <Typography style={{color: 'blue', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                        TL thắng: {playingUserList[0].win_percent}%\r\n                                    </Typography>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </ListItem>\r\n                ) : <ListItem>\r\n                        <Card variant=\"outlined\" className={ classes.playingUserInfoStyle }>\r\n                        </Card>\r\n                    </ListItem>}\r\n                {playingUserList[1] ? (\r\n                <ListItem key={playingUserList[1]._id}>\r\n                    <Card className={ classes.playingUserInfoStyle }>\r\n                        <CardContent>\r\n                            <div style={flexContainer}>\r\n                                <Button onClick={() => displayUserInfoDialog(playingUserList[1]._id)}>\r\n                                    <Avatar variant=\"square\"  src={convertAvatarPropToString(playingUserList[1].avatar)} style={{width: 60, height: 60}}></Avatar>\r\n                                </Button>\r\n                                <div style={{marginLeft: 30, margin: 'auto'}}>\r\n                                    {/* <Typography className={classes.title} variant=\"h6\" component=\"h6\" style={{color: 'red', margin: 0}} gutterBottom>\r\n                                        {playingUser.score}\r\n                                    </Typography> */}\r\n                                    <Typography style={{color: 'orange', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                        {oppSecond}\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{marginLeft: '5px'}}>\r\n                                <Typography style={{color: 'greenyellow', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                    {playingUserList[1].displayname}\r\n                                </Typography>\r\n                                <Typography style={{color: 'red', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                    Cup: {playingUserList[1].cup}\r\n                                </Typography>\r\n                                <Typography style={{color: 'blue', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                    TL thắng: {playingUserList[1].win_percent}%\r\n                                </Typography>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </ListItem>\r\n            ) : <ListItem>\r\n                    <Card variant=\"outlined\" className={ classes.playingUserInfoStyle }>\r\n                    </Card>\r\n                </ListItem>}                \r\n            </List>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <List style={{ width: '200px' }}>\r\n                {playingUserList[0] ? (\r\n                    <ListItem key={playingUserList[0]._id}>\r\n                        <Card className={ classes.playingUserInfoStyle }>\r\n                            <CardContent>\r\n                                <div style={flexContainer}>\r\n                                    <Button onClick={() => displayUserInfoDialog(playingUserList[0]._id)}>\r\n                                        <Avatar variant=\"square\"  src={convertAvatarPropToString(playingUserList[0].avatar)} style={{width: 60, height: 60}}></Avatar>\r\n                                    </Button>\r\n                                    <div style={{marginLeft: 30, margin: 'auto'}}>\r\n                                        {/* <Typography className={classes.title} variant=\"h6\" component=\"h6\" style={{color: 'red', margin: 0}} gutterBottom>\r\n                                            {playingUser.score}\r\n                                        </Typography> */}\r\n                                        <Typography style={{color: 'orange', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                            {oppSecond}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{marginLeft: '5px'}}>\r\n                                    <Typography style={{color: 'greenyellow', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                        {playingUserList[0].displayname}\r\n                                    </Typography>\r\n                                    <Typography style={{color: 'red', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                        Cup: {playingUserList[0].cup}\r\n                                    </Typography>\r\n                                    <Typography style={{color: 'blue', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                        TL thắng: {playingUserList[0].win_percent}%\r\n                                    </Typography>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </ListItem>\r\n                ) : <ListItem>\r\n                        <Card variant=\"outlined\" className={ classes.playingUserInfoStyle }>\r\n                        </Card>\r\n                    </ListItem>}\r\n                {playingUserList[1] ? (\r\n                <ListItem key={playingUserList[1]._id}>\r\n                    <Card className={ classes.playingUserInfoStyle }>\r\n                        <CardContent>\r\n                            <div style={flexContainer}>\r\n                                <Button onClick={() => displayUserInfoDialog(playingUserList[1]._id)}>\r\n                                    <Avatar variant=\"square\"  src={convertAvatarPropToString(playingUserList[1].avatar)} style={{width: 60, height: 60}}></Avatar>\r\n                                </Button>\r\n                                <div style={{marginLeft: 30, margin: 'auto'}}>\r\n                                    {/* <Typography className={classes.title} variant=\"h6\" component=\"h6\" style={{color: 'red', margin: 0}} gutterBottom>\r\n                                        {playingUser.score}\r\n                                    </Typography> */}\r\n                                    <Typography style={{color: 'orange', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                        {second}\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{marginLeft: '5px'}}>\r\n                                <Typography style={{color: 'greenyellow', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                    {playingUserList[1].displayname}\r\n                                </Typography>\r\n                                <Typography style={{color: 'red', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                    Cup: {playingUserList[1].cup}\r\n                                </Typography>\r\n                                <Typography style={{color: 'blue', fontWeight: 'bold'}} variant=\"p\" component=\"p\" gutterBottom>\r\n                                    TL thắng: {playingUserList[1].win_percent}%\r\n                                </Typography>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </ListItem>\r\n            ) : <ListItem>\r\n                    <Card variant=\"outlined\" className={ classes.playingUserInfoStyle }>\r\n                    </Card>\r\n                </ListItem>}                \r\n            </List>\r\n        )\r\n    }\r\n}","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\matchHistoryItemSlice.js",["377","378","379","380"],"import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createSelector,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport axios from \"../../utils/axios\";\r\n\r\nconst initialState = [{\r\n    step: [{\r\n        squares: [],\r\n        message: \"\"\r\n    }],\r\n    win: null,\r\n    size: 20,\r\n    id_board: \"\",\r\n    id_match: \"\",\r\n    id_user1: \"\",\r\n    id_user2: \"\",\r\n    displayname_user1: \"\",\r\n    displayname_user2: \"\",\r\n    createdAt: null\r\n}];\r\n\r\nconst matchHistoryItemSlice = createSlice({\r\n    name: 'matchHistoryItem',\r\n    initialState,\r\n    reducers: {\r\n        matchHistoryItemUpdated(state, action) {\r\n            const { matchHistoryItem } = action.payload;\r\n            state[0] = {\r\n                step: matchHistoryItem.step,\r\n                displayname_win: matchHistoryItem.displayname_win,\r\n                size: matchHistoryItem.size,\r\n                id_board: matchHistoryItem.id_board,\r\n                id_match: matchHistoryItem._id,\r\n                id_user1: matchHistoryItem.id_user1,\r\n                id_user2: matchHistoryItem.id_user2,\r\n                displayname_user1: matchHistoryItem.displayname_user1,\r\n                displayname_user2: matchHistoryItem.displayname_user2,\r\n                createdAt: matchHistoryItem.createdAt\r\n            }\r\n        }\r\n    }   \r\n});\r\n\r\nexport const { matchHistoryItemUpdated } = matchHistoryItemSlice.actions\r\nexport default matchHistoryItemSlice.reducer;\r\n\r\nexport const selectMatchHistoryItem = (state) =>  state.matchHistoryItem[0];","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\boardsSlice.js",["381"],"import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createSelector,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport axios from \"../../utils/axios\";\r\n\r\nconst boardsAdapter = createEntityAdapter({\r\n    selectId: (board) => board._id\r\n});\r\n\r\nconst initialState = boardsAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n});\r\n\r\nexport const fetchBoards = createAsyncThunk('boards/fetchBoards', async () => {\r\n    const response = await axios.get('/boards');\r\n    return response.data.data;\r\n})\r\n\r\nexport const addNewBoard = createAsyncThunk('boards/addNewBoard', async (initBoard) => {\r\n    const response = await axios.post('/boards', initBoard);\r\n    return response.data.data;\r\n})\r\n\r\nexport const addNewBoardNotUpdateDB = createAsyncThunk('boards/addNewBoardNotUpdateDB', async (newBoard) => {\r\n    return newBoard;\r\n})\r\n\r\n// export const boardUpdated = createAsyncThunk('boards/boardUpdated', async (newBoard) => {\r\n//     return newBoard;\r\n// })\r\n\r\nconst boardSlice = createSlice({\r\n    name: 'boards',\r\n    initialState,\r\n    reducers: {\r\n        boardUpdated(state, action) {\r\n            const { newBoard } = action.payload;\r\n            const existingBoard = state.entities[newBoard._id];\r\n            if (existingBoard) {\r\n                existingBoard.id_user1 = newBoard.id_user1;\r\n                existingBoard.id_user2 = newBoard.id_user2;\r\n                existingBoard.state = newBoard.state;\r\n            }\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchBoards.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded';\r\n            boardsAdapter.upsertMany(state, action.payload);\r\n        },\r\n        [fetchBoards.rejected]: (state, action) => {\r\n            state.status = 'failed';\r\n            state.error = action.payload;\r\n        },\r\n        [addNewBoard.fulfilled]: boardsAdapter.addOne,\r\n        [addNewBoardNotUpdateDB.fulfilled]: boardsAdapter.addOne\r\n    },\r\n});\r\n\r\nexport const { boardUpdated } = boardSlice.actions;\r\n\r\nexport default boardSlice.reducer;\r\n\r\nexport const {\r\n    selectAll: selectAllBoards,\r\n    selectIds: selectBoardIds,\r\n    selectById: selectBoardById\r\n} = boardsAdapter.getSelectors((state) => {\r\n    return state.boards;\r\n});\r\n\r\nexport const selectBoardByRoom = createSelector(\r\n    [selectAllBoards, (state, idRoom) => {\r\n        return idRoom}],\r\n    (boards, idRoom) => {\r\n        return boards.filter(board => board.code == idRoom);\r\n    },\r\n)\r\n\r\n","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\users\\block\\index.js",["382","383"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { showNotification as showNotificationAction } from 'admin-on-rest';\r\nimport axios from \"../../../../utils/axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass BlockButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {block : this.props.record.block}\r\n    }\r\n\r\n    handleClick = () => {\r\n        let { push, record, showNotification } = this.props;\r\n        const updatedRecord = { ...record, block: record.block === 0? 1 : 0 };\r\n        axios.post(`/admin/users/${record.id}/block`, updatedRecord)\r\n            .then(() => {\r\n                window.location.reload();\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClick}>\r\n            {this.state.block === 1? 'Unblock' : 'Block'}\r\n        </Button>;\r\n    }\r\n}\r\n\r\nBlockButton.propTypes = {\r\n    push: PropTypes.func,\r\n    record: PropTypes.object,\r\n    showNotification: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, {\r\n    showNotification: showNotificationAction,\r\n    // push: pushAction,\r\n})(BlockButton);","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\SignIn\\ForgetPassword\\index.js",["384","385"],"import React, { useEffect, useState, useLocation } from 'react';\r\nimport './index.css';\r\nimport axios from '../../../../../utils/axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function ForgetPassword() {\r\n    const requestPasswordUrl = \"/forget-password\";\r\n    const [isResetPasswordSuccess, setIsResetPasswordSuccess] = useState(false);\r\n    useEffect(() => {\r\n        //fetch(URL + \"/sign-in\");\r\n    }, []);\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    async function forgetPassword() {\r\n        const email = document.getElementsByName(\"email\")[0].value;\r\n        \r\n        if (!validateEmail(email)) {\r\n            alert(\"Email không đúng định dạng\");\r\n            return;\r\n        }\r\n        const api = await axios.post(\"api/users/forget-password\", {email});\r\n        alert(api.data.message);\r\n        if (api.data.data) {\r\n            setIsResetPasswordSuccess(true);\r\n            \r\n        }\r\n    }\r\n    if (isResetPasswordSuccess)\r\n        return (<Redirect to=\"/sign-in\"/>);\r\n\r\n    return (\r\n        <div id=\"login-box\" style={{background: 'lavender', marginBottom: '0px'}}>\r\n            <form onSubmit={(e) => {e.preventDefault(); forgetPassword(); }} class=\"left\">\r\n                <h1>LẤY LẠI MẬT KHẨU</h1>\r\n                <input type=\"text\" name=\"email\" placeholder=\"Nhập email\" required/>\r\n                <input type=\"submit\" name=\"signup_submit\" value=\"THỰC HIỆN\" />\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n}","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\Board\\index.js",[],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\CheckActivateAccount\\index.js",["386","387","388","389","390","391","392"],"import { useState, useEffect } from \"react\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport axios from '../../../../utils/axios';\r\n\r\nexport default function CheckActivateAccount() {\r\n    useEffect(async () => {\r\n        await checkActivateAccount();\r\n    }, [])\r\n\r\n    async function checkActivateAccount() {\r\n        const key = window.location.pathname.split('/')[2];\r\n        \r\n        const api = await axios.post(\"api/users/check-activate-account\", {key: key});\r\n        alert(api.data.message);\r\n        \r\n    }\r\n    return (\r\n        <div></div>\r\n    )\r\n}",["393","394"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\Audience\\index.js",["395","396","397","398","399","400","401"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchUserInfoDialog } from '../../store/slice/userInfoDialogSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nexport default function Audience({}) {\r\n    const classes = useStyles();\r\n    let [audienceList, setAudienceList] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    function getAudienceList() {\r\n        setAudienceList([{ iduser: \"5fd79ae65af5db095e4e6e75\", displayname: \"Lê\" },\r\n        { iduser: \"5fd79af05af5db095e4e6e76\", displayname: \"Nguyễn\" }]);\r\n        // fetch(URL + \"/api/board/username/\" + username)\r\n        //     .then(res => res.json())\r\n        //     .then(res => setTableList(res))\r\n        //     .catch(err => err);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAudienceList();\r\n    }, []);\r\n\r\n    function renderAudienceItem(iduser, displayname) {\r\n        return (\r\n            <ListItem key={iduser} button>\r\n                <Button onClick={() => displayUserInfoDialog(iduser)}>\r\n                    <Avatar variant=\"circle\" src='/img/user-icon.jpg' style={{width: 30, height: 30, marginRight: 10}}></Avatar>\r\n                    <ListItemText primary={displayname} />\r\n                </Button>\r\n            </ListItem>\r\n        )\r\n    }\r\n\r\n    function renderAudienceList() {\r\n        let result = [];\r\n        audienceList.map((audienceItem) => result.push(renderAudienceItem(audienceItem.iduser, audienceItem.displayname)));\r\n        return result;\r\n    }\r\n\r\n    async function displayUserInfoDialog(iduser) {\r\n        await dispatch(fetchUserInfoDialog({iduser}));\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: 180 }}>\r\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\" gutterBottom color=\"primary\">\r\n                Khán giả\r\n            </Typography>\r\n            <List>\r\n                {renderAudienceList()}\r\n            </List>\r\n        </div>\r\n    )\r\n}",["402","403"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\store\\slice\\playingUsersSlice.js",["404","405"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\App.js",["406","407","408","409","410","411","412"],"import logo from './logo.svg';\r\nimport './App.css';\r\n//import io from \"socket.io-client\"\r\nimport axios from \"axios\"\r\nimport {useState, useEffect} from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport User from './pages/User';\r\nimport React from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Admin from './pages/Admin';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navigationStyle: {\r\n    backgroundColor: 'aqua',\r\n  }\r\n}));\r\n\r\n// const socket = io('https://caro-be.herokuapp.com');\r\n//const socket = io('http://localhost:8000');\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    // async function fetchData() {\r\n    //   try {\r\n    //     const data = await axios.get(\"http://localhost:8000/api/user\");\r\n    //     console.log(data);\r\n    //   } catch (error) {\r\n    //     console.log(error);\r\n    //   }\r\n    // }\r\n    // fetchData();\r\n    // socket.emit(\"hello-server\", \"vì một câu nói\");\r\n    \r\n\r\n  }, []);\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <Switch>\r\n          <Route exact path=\"/admin/\">\r\n            <Admin />\r\n          </Route>\r\n          <Route path=\"/*\">\r\n            <User />\r\n          </Route>\r\n        </Switch>\r\n      </React.Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\index.js",[],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\history.js",[],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\index.js",["413","414","415","416","417","418","419","420","421","422"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\Game\\index.js",["423","424","425","426"],"import React, { useState, useEffect } from 'react';\r\nimport Board from '../../../components/Board';\r\nimport axios from \"../../../utils/axios\";\r\n\r\nimport './index.css'\r\n\r\nfunction Game({dimension, handlePlayGame, newSquares, newWinLine, handleWinGame, handleReplay, isWin}) {\r\n    const [squares, setSquares] = useState(Array(dimension*dimension).fill(null));\r\n    const [lastMove, setLastMove] = useState(-1);\r\n    const [winLine, setWinLine] = useState(null);\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [XorO, setXorO] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (newSquares) {\r\n            setSquares(newSquares);\r\n            if (newSquares.every(el => !el)) {\r\n                setWinLine(null);\r\n            }\r\n            setXIsNext(!xIsNext);\r\n        }\r\n    }, [newSquares]);\r\n\r\n    useEffect(() => {\r\n        setWinLine(newWinLine);\r\n        if (!newWinLine) {\r\n            setXIsNext(true);\r\n            setXorO(null);\r\n            console.log('reset');\r\n        }\r\n        handleReplay();\r\n    }, [newWinLine]);\r\n\r\n    function handleClick(i) {\r\n        const currentSquares = squares.slice();\r\n        if (!XorO) {\r\n            if (xIsNext) {\r\n                setXorO('X');\r\n            } else {\r\n                setXorO('O');\r\n            }\r\n        }\r\n        console.log((xIsNext && XorO === 'O'));\r\n\r\n        if (currentSquares[i] || winLine || (xIsNext && XorO === 'O') || (!xIsNext && XorO === 'X') || isWin) {\r\n            return;\r\n        }\r\n\r\n        currentSquares[i] = xIsNext ? 'X' : 'O';\r\n        const line = calculateWinner(currentSquares, i);\r\n        if (line) {\r\n            setWinLine(line);\r\n            handleReplay();\r\n            handleWinGame(line);\r\n        }\r\n        setSquares(currentSquares);\r\n        setLastMove(i);\r\n        setXIsNext(!xIsNext);\r\n        handlePlayGame(currentSquares);\r\n    }\r\n\r\n    function calculateWinner(squares, i) {\r\n        const distance = [1, dimension - 1, dimension, dimension + 1];\r\n        let line = [];\r\n        for (let j = 0; j < distance.length; j++) {\r\n            line = [];\r\n            let backward = true, forward = true, countBackWard = 0, countForWard = 0;\r\n            do {\r\n                // console.log(i + (-countBackWard - 1)*distance[j],squares[i],squares[i + (-countBackWard - 1)*distance[j]]);\r\n                // console.log(i + (countForWard + 1)*distance[j],squares[i],squares[i + (countForWard + 1)*distance[j]]);\r\n                    if (backward && (i + (-countBackWard - 1)*distance[j]) >= 0 && squares[i] === squares[i + (-countBackWard - 1)*distance[j]]) {\r\n                        line.push(i + (-countBackWard - 1)*distance[j]);\r\n                        countBackWard++;\r\n                    } else {\r\n                        backward = false;\r\n                    }\r\n                    if (forward && (i + (countForWard + 1)*distance[j]) < squares.length && squares[i] === squares[i + (countForWard + 1)*distance[j]]) {\r\n                        line.push(i + (countForWard + 1)*distance[j]);\r\n                        countForWard++;\r\n                    } else {\r\n                        forward = false;\r\n                    }\r\n            } while (backward || forward);\r\n            if (line.length >= 4) {\r\n                line.push(i);\r\n                return line;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\" >\r\n                <Board\r\n                    squares={squares}\r\n                    onClick={(i) => handleClick(i)}\r\n                    winLine={winLine}\r\n                    numRow={dimension}\r\n                    numCol={dimension}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Game;","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\matches\\messages\\index.js",["427","428"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\RankingTable\\index.js",["429","430","431","432"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState, useLocation } from 'react';\r\nimport axios from \"../../../../utils/axios\";\r\nimport './index.css';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchUserInfoDialog } from '../../../../store/slice/userInfoDialogSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nexport default function RankingTable() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [listUserDescending, setListUserDescending] = useState([]);\r\n    let [rankingTable, setRankingTable] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const api = await axios.get(\"api/users/all\");\r\n                if (api.data.data) {\r\n                    setListUserDescending(api.data.data.sort(compareUser));\r\n                    renderRankingTable();\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        fetchData();\r\n\r\n    }, [listUserDescending.length]);\r\n\r\n    function compareUser(a, b) {\r\n        return b.cup - a.cup;\r\n    }\r\n\r\n\r\n    function renderItemUserDescending(user, index) {\r\n        return (\r\n            <tr onClick={() => displayUserInfoDialog(user._id)}>\r\n                <td class=\"rank\">{index + 1}</td>\r\n                <td class=\"team\">{user.displayname}</td>\r\n                <td class=\"points\">{user.total_match}</td>\r\n                <td class=\"up-down\">{user.win_match}</td>\r\n                <td class=\"up-down\">{user.win_percent}</td>\r\n                <td class=\"points\">{user.cup}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    function renderRankingTable() {\r\n        let result = [];\r\n        listUserDescending.map((user, index) => {\r\n            result.push(renderItemUserDescending(user, index));\r\n        });\r\n        setRankingTable(result);\r\n    }\r\n\r\n    async function displayUserInfoDialog(iduser) {\r\n        await dispatch(fetchUserInfoDialog({iduser: iduser}));\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <header>\r\n                <h1 style={{color: 'green'}}>Caro World Ranking</h1>\r\n            </header>\r\n            <div class=\"wrapper\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Rank</th>\r\n                            <th>Display name</th>\r\n                            <th>Played</th>\r\n                            <th>Won</th>\r\n                            <th>Win percent</th>\r\n                            <th>Cup</th>\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody>\r\n                        {rankingTable}\r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\index.js",["433","434","435","436","437","438","439","440","441"],"import { useState, useEffect } from \"react\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport './index.css';\r\nimport axios from '../../../utils/axios';\r\n\r\nfunction Header({currentUser, signOut}) {\r\n    let [displayName, setDisplayName] = useState(\"\");\r\n    // function checkSignInStatus() {\r\n    //     if (currentUser) {\r\n    //         return (\r\n    //             <Redirect to=\"/play\" />\r\n    //         );\r\n    //     }\r\n    // } \r\n\r\n    useEffect(() => {\r\n        if (currentUser) setDisplayName(currentUser.displayname);\r\n        else setDisplayName(\"\");\r\n    }, [currentUser]);\r\n\r\n    async function activateAccount() {\r\n        const api = await axios.post(\"api/users/activate-account\", {email: currentUser.email});\r\n        alert(api.data.message);\r\n    }\r\n    let matchHistoryLink;\r\n    if (currentUser)\r\n        matchHistoryLink = '/match-history/' + currentUser._id;\r\n    return (\r\n        <nav class=\"navbar navbar-dark navbar-expand-md navigation-clean-search\">\r\n            <div class=\"container\">\r\n                <div class=\"collapse navbar-collapse\" id=\"navcol-1\">\r\n                    {/* {checkSignInStatus()} */}\r\n                    <Link to={'/'}>\r\n                        <div class=\"navbar-brand\">Caro Game</div>\r\n                    </Link>\r\n                    <ul class=\"nav navbar-nav form-inline mr-auto\">     \r\n                        <li class=\"nav-item\" role=\"presentation\">\r\n                        <Link to={'/play'}>\r\n                            <div class=\"nav-link\">Chơi</div>     \r\n                        </Link>\r\n                        </li>\r\n                        <li hidden={!currentUser} class=\"dropdown\">\r\n                            <a class=\"dropdown-toggle nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\">Player </a>\r\n                            <div class=\"dropdown-menu\" role=\"menu\">\r\n                            <Link to={'/profile'} >\r\n                                <a class=\"dropdown-item\" role=\"presentation\">Profile</a>\r\n                            </Link>\r\n                            <Link to={matchHistoryLink} >\r\n                                <a class=\"dropdown-item\" role=\"presentation\">Lịch sử ván đấu</a>\r\n                            </Link>\r\n                            \r\n                            <a class=\"dropdown-item\" role=\"presentation\" onClick={() => activateAccount()}>Kích hoạt tài khoản</a>\r\n                            \r\n                            <Link to={'/'}>\r\n                                <a class=\"dropdown-item\" role=\"presentation\" onClick={() => signOut()} >Đăng xuất</a>\r\n                            </Link>\r\n                            </div>   \r\n                        </li>\r\n                        <li class=\"nav-item\" role=\"presentation\">\r\n                            <Link to={'/ranking-table'}> \r\n                                <div class=\"nav-link\">Bảng xếp hạng</div>     \r\n                            </Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div hidden={currentUser}>\r\n                        <Link to={'/sign-in'}>\r\n                            <span class=\"navbar-text\">\r\n                                <div class=\"login\">Đăng Nhập</div>\r\n                            </span>\r\n                        </Link>\r\n                        <Link to={'/sign-up'}>\r\n                            <div class=\"btn action-button\" role=\"button\">Đăng Ký</div>\r\n                        </Link>\r\n                    </div>\r\n                    <div hidden={!currentUser}>\r\n                        <span class=\"login\">Xin chào {displayName}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\components\\common\\Header\\MatchHistory\\MatchHistoryItem\\HistoryGame\\index.js",["442","443","444","445","446"],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\User\\UserInfoDialog\\index.js",["447","448","449","450"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUserInfoDialog, closeUserInfoDialog } from '../../../store/slice/userInfoDialogSlice';\r\n\r\nimport convertAvatarPropToString from '../../../utils/binaryToString';\r\nimport getFormattedDate from '../../../utils/date';\r\n\r\n//let [openUserInfoDialog, setOpenUserInfoDialog] = useState(false);\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nexport default function UserInfo({socket}){\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const userInfoDialog = useSelector(selectUserInfoDialog);\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(sessionStorage.getItem('currentuser')));\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    async function inviteUser() {\r\n        const boardCode = window.location.pathname.split('/')[2];\r\n        if (boardCode) {\r\n            await socket.emit(\"invite-user\", [currentUser.displayname, userInfoDialog.idUser, boardCode]);\r\n        }\r\n        else if (!currentUser) {\r\n            alert(\"Bạn cần phải đăng nhập để mời người khác\");\r\n        }\r\n        else {\r\n            alert(\"Bạn cần phải ở trong bàn để mời người khác\");\r\n        }\r\n    }\r\n\r\n    let closeImg = { cursor: 'pointer', float: 'right', marginTop: '5px', width: '20px' };\r\n    return (\r\n        <Dialog open={userInfoDialog.isOpen}\r\n            onClose={() => dispatch(closeUserInfoDialog())} aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle>Thông tin người chơi\r\n            <img src='https://d30y9cdsu7xlg0.cloudfront.net/png/53504-200.png' style={closeImg} onClick={() => { dispatch(closeUserInfoDialog()) }} />\r\n            </DialogTitle>\r\n            <DialogContent style={{display: 'flex', alignItems: 'flex-end'}}>\r\n                <Avatar variant=\"square\" src={convertAvatarPropToString(userInfoDialog.avatar)} style={{ width: 110, height: 110, marginRight: 30 }}></Avatar>\r\n                <div>\r\n                    <Typography className={classes.title} variant=\"p\" component=\"p\" style={{ fontWeight: 'bold' }} gutterBottom>\r\n                        {userInfoDialog.displayName}\r\n                    </Typography>\r\n                    <Typography className={classes.title} style={{ color: 'black' }} variant=\"p\" component=\"p\" gutterBottom>\r\n                        Join Date: {getFormattedDate(new Date(userInfoDialog.joinDate))}\r\n                    </Typography>\r\n                    <Typography className={classes.title} style={{ color: 'blue' }} variant=\"p\" component=\"p\" gutterBottom>\r\n                        {userInfoDialog.statistic}\r\n                    </Typography>\r\n                    <Typography className={classes.title} style={{ color: 'red' }} variant=\"p\" component=\"p\" gutterBottom>\r\n                        Cup: {userInfoDialog.cup}\r\n                    </Typography>\r\n                </div>\r\n                {/* <DialogContentText>\r\n\r\n                </DialogContentText> */}\r\n\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => { dispatch(closeUserInfoDialog()); window.location.href=\"/match-history/\" + userInfoDialog.idUser; }} color=\"primary\">\r\n                    Ván đấu\r\n                </Button>\r\n                <Button onClick={() => { inviteUser(); dispatch(closeUserInfoDialog()); }} color=\"primary\">\r\n                    Mời chơi\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\pages\\Admin\\index.js",["451"],"import {Admin, jsonServerRestClient, fetchUtils, Resource} from \"admin-on-rest\";\r\nimport {UserList, UserShow, UserEdit} from \"./users\";\r\nimport {MatchList, MatchEdit} from './matches'\r\nimport auth from './auth';\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n\r\nconst httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    const token = localStorage.getItem('token');\r\n    options.headers.set('Authorization', `Bearer ${token}`);\r\n    return fetchUtils.fetchJson(url, options);\r\n}\r\n\r\nexport default (props) => (\r\n    <Admin restClient={jsonServerRestClient('http://localhost:8000/admin', httpClient)} authClient={auth}>\r\n        <Resource name=\"users\" list={UserList} show={UserShow} edit={UserEdit} icon={PeopleIcon}/>\r\n        <Resource name='matches' list={MatchList} edit={MatchEdit}/>\r\n    </Admin>\r\n);","D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\axios.js",[],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\utils\\domain.js",[],"D:\\Vinh175\\Hoc\\Nam3\\WebNangCao\\DACK\\caro-fe\\src\\reportWebVitals.js",[],{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","severity":1,"message":"457","line":3,"column":8,"nodeType":"458","messageId":"459","endLine":3,"endColumn":12},{"ruleId":"456","severity":1,"message":"460","line":4,"column":8,"nodeType":"458","messageId":"459","endLine":4,"endColumn":16},{"ruleId":"456","severity":1,"message":"461","line":12,"column":8,"nodeType":"458","messageId":"459","endLine":12,"endColumn":17},{"ruleId":"456","severity":1,"message":"462","line":29,"column":8,"nodeType":"458","messageId":"459","endLine":29,"endColumn":16},{"ruleId":"456","severity":1,"message":"463","line":33,"column":22,"nodeType":"458","messageId":"459","endLine":33,"endColumn":28},{"ruleId":"456","severity":1,"message":"464","line":34,"column":5,"nodeType":"458","messageId":"459","endLine":34,"endColumn":11},{"ruleId":"456","severity":1,"message":"465","line":35,"column":5,"nodeType":"458","messageId":"459","endLine":35,"endColumn":10},{"ruleId":"456","severity":1,"message":"466","line":36,"column":5,"nodeType":"458","messageId":"459","endLine":36,"endColumn":9},{"ruleId":"456","severity":1,"message":"467","line":37,"column":5,"nodeType":"458","messageId":"459","endLine":37,"endColumn":13},{"ruleId":"456","severity":1,"message":"468","line":43,"column":5,"nodeType":"458","messageId":"459","endLine":43,"endColumn":20},{"ruleId":"456","severity":1,"message":"469","line":44,"column":5,"nodeType":"458","messageId":"459","endLine":44,"endColumn":19},{"ruleId":"456","severity":1,"message":"470","line":83,"column":10,"nodeType":"458","messageId":"459","endLine":83,"endColumn":19},{"ruleId":"456","severity":1,"message":"471","line":83,"column":21,"nodeType":"458","messageId":"459","endLine":83,"endColumn":33},{"ruleId":"456","severity":1,"message":"472","line":93,"column":25,"nodeType":"458","messageId":"459","endLine":93,"endColumn":39},{"ruleId":"473","severity":1,"message":"474","line":126,"column":8,"nodeType":"475","endLine":126,"endColumn":16,"suggestions":"476"},{"ruleId":"473","severity":1,"message":"474","line":144,"column":8,"nodeType":"475","endLine":144,"endColumn":16,"suggestions":"477"},{"ruleId":"473","severity":1,"message":"478","line":162,"column":8,"nodeType":"475","endLine":162,"endColumn":16,"suggestions":"479"},{"ruleId":"473","severity":1,"message":"478","line":180,"column":8,"nodeType":"475","endLine":180,"endColumn":16,"suggestions":"480"},{"ruleId":"456","severity":1,"message":"481","line":183,"column":15,"nodeType":"458","messageId":"459","endLine":183,"endColumn":19},{"ruleId":"482","severity":1,"message":"483","line":185,"column":19,"nodeType":"484","messageId":"485","endLine":185,"endColumn":21},{"ruleId":"482","severity":1,"message":"483","line":187,"column":19,"nodeType":"484","messageId":"485","endLine":187,"endColumn":21},{"ruleId":"456","severity":1,"message":"486","line":236,"column":14,"nodeType":"458","messageId":"459","endLine":236,"endColumn":29},{"ruleId":"482","severity":1,"message":"483","line":311,"column":60,"nodeType":"484","messageId":"485","endLine":311,"endColumn":62},{"ruleId":"456","severity":1,"message":"487","line":320,"column":14,"nodeType":"458","messageId":"459","endLine":320,"endColumn":19},{"ruleId":"482","severity":1,"message":"483","line":379,"column":63,"nodeType":"484","messageId":"485","endLine":379,"endColumn":65},{"ruleId":"488","severity":1,"message":"489","line":490,"column":21,"nodeType":"490","endLine":490,"endColumn":81},{"ruleId":"452","replacedBy":"491"},{"ruleId":"454","replacedBy":"492"},{"ruleId":"456","severity":1,"message":"493","line":11,"column":11,"nodeType":"458","messageId":"459","endLine":11,"endColumn":18},{"ruleId":"494","severity":1,"message":"495","line":20,"column":43,"nodeType":"496","messageId":"497","endLine":20,"endColumn":45},{"ruleId":"473","severity":1,"message":"498","line":33,"column":10,"nodeType":"475","endLine":33,"endColumn":31,"suggestions":"499"},{"ruleId":"452","replacedBy":"500"},{"ruleId":"454","replacedBy":"501"},{"ruleId":"502","severity":1,"message":"503","line":4,"column":1,"nodeType":"504","endLine":35,"endColumn":2},{"ruleId":"456","severity":1,"message":"505","line":1,"column":38,"nodeType":"458","messageId":"459","endLine":1,"endColumn":49},{"ruleId":"456","severity":1,"message":"467","line":3,"column":10,"nodeType":"458","messageId":"459","endLine":3,"endColumn":18},{"ruleId":"456","severity":1,"message":"506","line":10,"column":11,"nodeType":"458","messageId":"459","endLine":10,"endColumn":44},{"ruleId":"456","severity":1,"message":"505","line":1,"column":38,"nodeType":"458","messageId":"459","endLine":1,"endColumn":49},{"ruleId":"482","severity":1,"message":"507","line":18,"column":22,"nodeType":"484","messageId":"485","endLine":18,"endColumn":24},{"ruleId":"452","replacedBy":"508"},{"ruleId":"454","replacedBy":"509"},{"ruleId":"456","severity":1,"message":"505","line":2,"column":38,"nodeType":"458","messageId":"459","endLine":2,"endColumn":49},{"ruleId":"456","severity":1,"message":"510","line":5,"column":8,"nodeType":"458","messageId":"459","endLine":5,"endColumn":15},{"ruleId":"456","severity":1,"message":"463","line":16,"column":22,"nodeType":"458","messageId":"459","endLine":16,"endColumn":28},{"ruleId":"456","severity":1,"message":"464","line":17,"column":5,"nodeType":"458","messageId":"459","endLine":17,"endColumn":11},{"ruleId":"456","severity":1,"message":"465","line":18,"column":5,"nodeType":"458","messageId":"459","endLine":18,"endColumn":10},{"ruleId":"456","severity":1,"message":"467","line":20,"column":5,"nodeType":"458","messageId":"459","endLine":20,"endColumn":13},{"ruleId":"456","severity":1,"message":"511","line":41,"column":10,"nodeType":"458","messageId":"459","endLine":41,"endColumn":23},{"ruleId":"456","severity":1,"message":"512","line":41,"column":25,"nodeType":"458","messageId":"459","endLine":41,"endColumn":41},{"ruleId":"473","severity":1,"message":"513","line":75,"column":8,"nodeType":"475","endLine":75,"endColumn":26,"suggestions":"514"},{"ruleId":"494","severity":1,"message":"495","line":114,"column":31,"nodeType":"496","messageId":"497","endLine":114,"endColumn":33},{"ruleId":"452","replacedBy":"515"},{"ruleId":"454","replacedBy":"516"},{"ruleId":"456","severity":1,"message":"505","line":1,"column":38,"nodeType":"458","messageId":"459","endLine":1,"endColumn":49},{"ruleId":"456","severity":1,"message":"506","line":9,"column":11,"nodeType":"458","messageId":"459","endLine":9,"endColumn":44},{"ruleId":"456","severity":1,"message":"481","line":12,"column":11,"nodeType":"458","messageId":"459","endLine":12,"endColumn":15},{"ruleId":"482","severity":1,"message":"507","line":39,"column":22,"nodeType":"484","messageId":"485","endLine":39,"endColumn":24},{"ruleId":"452","replacedBy":"517"},{"ruleId":"454","replacedBy":"518"},{"ruleId":"456","severity":1,"message":"505","line":1,"column":38,"nodeType":"458","messageId":"459","endLine":1,"endColumn":49},{"ruleId":"456","severity":1,"message":"519","line":5,"column":5,"nodeType":"458","messageId":"459","endLine":5,"endColumn":20},{"ruleId":"456","severity":1,"message":"468","line":6,"column":5,"nodeType":"458","messageId":"459","endLine":6,"endColumn":20},{"ruleId":"456","severity":1,"message":"469","line":7,"column":5,"nodeType":"458","messageId":"459","endLine":7,"endColumn":19},{"ruleId":"456","severity":1,"message":"520","line":9,"column":5,"nodeType":"458","messageId":"459","endLine":9,"endColumn":16},{"ruleId":"456","severity":1,"message":"521","line":14,"column":46,"nodeType":"458","messageId":"459","endLine":14,"endColumn":65},{"ruleId":"456","severity":1,"message":"522","line":14,"column":67,"nodeType":"458","messageId":"459","endLine":14,"endColumn":87},{"ruleId":"456","severity":1,"message":"523","line":21,"column":8,"nodeType":"458","messageId":"459","endLine":21,"endColumn":31},{"ruleId":"456","severity":1,"message":"524","line":22,"column":8,"nodeType":"458","messageId":"459","endLine":22,"endColumn":20},{"ruleId":"456","severity":1,"message":"525","line":24,"column":8,"nodeType":"458","messageId":"459","endLine":24,"endColumn":18},{"ruleId":"456","severity":1,"message":"526","line":26,"column":8,"nodeType":"458","messageId":"459","endLine":26,"endColumn":18},{"ruleId":"456","severity":1,"message":"527","line":27,"column":8,"nodeType":"458","messageId":"459","endLine":27,"endColumn":16},{"ruleId":"456","severity":1,"message":"528","line":28,"column":8,"nodeType":"458","messageId":"459","endLine":28,"endColumn":18},{"ruleId":"456","severity":1,"message":"529","line":29,"column":8,"nodeType":"458","messageId":"459","endLine":29,"endColumn":16},{"ruleId":"456","severity":1,"message":"530","line":32,"column":8,"nodeType":"458","messageId":"459","endLine":32,"endColumn":17},{"ruleId":"456","severity":1,"message":"531","line":36,"column":8,"nodeType":"458","messageId":"459","endLine":36,"endColumn":25},{"ruleId":"456","severity":1,"message":"532","line":39,"column":8,"nodeType":"458","messageId":"459","endLine":39,"endColumn":16},{"ruleId":"456","severity":1,"message":"462","line":43,"column":8,"nodeType":"458","messageId":"459","endLine":43,"endColumn":16},{"ruleId":"456","severity":1,"message":"533","line":47,"column":7,"nodeType":"458","messageId":"459","endLine":47,"endColumn":10},{"ruleId":"456","severity":1,"message":"534","line":48,"column":5,"nodeType":"458","messageId":"459","endLine":48,"endColumn":16},{"ruleId":"456","severity":1,"message":"535","line":88,"column":12,"nodeType":"458","messageId":"459","endLine":88,"endColumn":23},{"ruleId":"456","severity":1,"message":"536","line":88,"column":25,"nodeType":"458","messageId":"459","endLine":88,"endColumn":39},{"ruleId":"456","severity":1,"message":"537","line":92,"column":21,"nodeType":"458","messageId":"459","endLine":92,"endColumn":31},{"ruleId":"456","severity":1,"message":"538","line":105,"column":12,"nodeType":"458","messageId":"459","endLine":105,"endColumn":25},{"ruleId":"473","severity":1,"message":"539","line":146,"column":8,"nodeType":"475","endLine":146,"endColumn":23,"suggestions":"540"},{"ruleId":"473","severity":1,"message":"478","line":178,"column":8,"nodeType":"475","endLine":178,"endColumn":24,"suggestions":"541"},{"ruleId":"473","severity":1,"message":"542","line":204,"column":8,"nodeType":"475","endLine":204,"endColumn":16,"suggestions":"543"},{"ruleId":"473","severity":1,"message":"544","line":300,"column":8,"nodeType":"475","endLine":300,"endColumn":34,"suggestions":"545"},{"ruleId":"473","severity":1,"message":"546","line":312,"column":25,"nodeType":"458","endLine":312,"endColumn":33},{"ruleId":"473","severity":1,"message":"547","line":366,"column":8,"nodeType":"475","endLine":366,"endColumn":10,"suggestions":"548"},{"ruleId":"456","severity":1,"message":"549","line":397,"column":14,"nodeType":"458","messageId":"459","endLine":397,"endColumn":31},{"ruleId":"452","replacedBy":"550"},{"ruleId":"454","replacedBy":"551"},{"ruleId":"456","severity":1,"message":"505","line":2,"column":38,"nodeType":"458","messageId":"459","endLine":2,"endColumn":49},{"ruleId":"552","severity":1,"message":"553","line":17,"column":33,"nodeType":"554","messageId":"485","endLine":17,"endColumn":35},{"ruleId":"482","severity":1,"message":"507","line":38,"column":25,"nodeType":"484","messageId":"485","endLine":38,"endColumn":27},{"ruleId":"488","severity":1,"message":"489","line":98,"column":25,"nodeType":"490","endLine":98,"endColumn":113},{"ruleId":"456","severity":1,"message":"555","line":3,"column":10,"nodeType":"458","messageId":"459","endLine":3,"endColumn":23},{"ruleId":"456","severity":1,"message":"556","line":10,"column":8,"nodeType":"458","messageId":"459","endLine":10,"endColumn":25},{"ruleId":"456","severity":1,"message":"557","line":11,"column":8,"nodeType":"458","messageId":"459","endLine":11,"endColumn":22},{"ruleId":"456","severity":1,"message":"558","line":12,"column":8,"nodeType":"458","messageId":"459","endLine":12,"endColumn":10},{"ruleId":"456","severity":1,"message":"559","line":14,"column":8,"nodeType":"458","messageId":"459","endLine":14,"endColumn":13},{"ruleId":"456","severity":1,"message":"463","line":23,"column":22,"nodeType":"458","messageId":"459","endLine":23,"endColumn":28},{"ruleId":"456","severity":1,"message":"464","line":24,"column":5,"nodeType":"458","messageId":"459","endLine":24,"endColumn":11},{"ruleId":"456","severity":1,"message":"465","line":25,"column":5,"nodeType":"458","messageId":"459","endLine":25,"endColumn":10},{"ruleId":"456","severity":1,"message":"466","line":26,"column":5,"nodeType":"458","messageId":"459","endLine":26,"endColumn":9},{"ruleId":"456","severity":1,"message":"467","line":27,"column":5,"nodeType":"458","messageId":"459","endLine":27,"endColumn":13},{"ruleId":"473","severity":1,"message":"560","line":51,"column":8,"nodeType":"475","endLine":51,"endColumn":31,"suggestions":"561"},{"ruleId":"488","severity":1,"message":"489","line":85,"column":17,"nodeType":"490","endLine":85,"endColumn":162},{"ruleId":"488","severity":1,"message":"489","line":94,"column":17,"nodeType":"490","endLine":94,"endColumn":192},{"ruleId":"456","severity":1,"message":"562","line":4,"column":5,"nodeType":"458","messageId":"459","endLine":4,"endColumn":19},{"ruleId":"456","severity":1,"message":"563","line":9,"column":7,"nodeType":"458","messageId":"459","endLine":9,"endColumn":28},{"ruleId":"452","replacedBy":"564"},{"ruleId":"454","replacedBy":"565"},{"ruleId":"456","severity":1,"message":"566","line":7,"column":5,"nodeType":"458","messageId":"459","endLine":7,"endColumn":17},{"ruleId":"456","severity":1,"message":"463","line":6,"column":22,"nodeType":"458","messageId":"459","endLine":6,"endColumn":28},{"ruleId":"456","severity":1,"message":"464","line":7,"column":5,"nodeType":"458","messageId":"459","endLine":7,"endColumn":11},{"ruleId":"456","severity":1,"message":"465","line":8,"column":5,"nodeType":"458","messageId":"459","endLine":8,"endColumn":10},{"ruleId":"456","severity":1,"message":"466","line":9,"column":5,"nodeType":"458","messageId":"459","endLine":9,"endColumn":9},{"ruleId":"456","severity":1,"message":"467","line":10,"column":5,"nodeType":"458","messageId":"459","endLine":10,"endColumn":13},{"ruleId":"456","severity":1,"message":"493","line":20,"column":11,"nodeType":"458","messageId":"459","endLine":20,"endColumn":18},{"ruleId":"456","severity":1,"message":"567","line":22,"column":17,"nodeType":"458","messageId":"459","endLine":22,"endColumn":23},{"ruleId":"456","severity":1,"message":"568","line":23,"column":12,"nodeType":"458","messageId":"459","endLine":23,"endColumn":19},{"ruleId":"456","severity":1,"message":"569","line":23,"column":21,"nodeType":"458","messageId":"459","endLine":23,"endColumn":31},{"ruleId":"456","severity":1,"message":"570","line":24,"column":12,"nodeType":"458","messageId":"459","endLine":24,"endColumn":24},{"ruleId":"456","severity":1,"message":"571","line":24,"column":26,"nodeType":"458","messageId":"459","endLine":24,"endColumn":41},{"ruleId":"456","severity":1,"message":"472","line":26,"column":25,"nodeType":"458","messageId":"459","endLine":26,"endColumn":39},{"ruleId":"494","severity":1,"message":"495","line":36,"column":47,"nodeType":"496","messageId":"497","endLine":36,"endColumn":49},{"ruleId":"473","severity":1,"message":"498","line":51,"column":8,"nodeType":"475","endLine":51,"endColumn":36,"suggestions":"572"},{"ruleId":"473","severity":1,"message":"573","line":80,"column":8,"nodeType":"475","endLine":80,"endColumn":16,"suggestions":"574"},{"ruleId":"452","replacedBy":"575"},{"ruleId":"454","replacedBy":"576"},{"ruleId":"456","severity":1,"message":"577","line":2,"column":49,"nodeType":"458","messageId":"459","endLine":2,"endColumn":68},{"ruleId":"456","severity":1,"message":"578","line":2,"column":105,"nodeType":"458","messageId":"459","endLine":2,"endColumn":109},{"ruleId":"456","severity":1,"message":"579","line":2,"column":111,"nodeType":"458","messageId":"459","endLine":2,"endColumn":117},{"ruleId":"456","severity":1,"message":"580","line":2,"column":119,"nodeType":"458","messageId":"459","endLine":2,"endColumn":128},{"ruleId":"456","severity":1,"message":"581","line":3,"column":5,"nodeType":"458","messageId":"459","endLine":3,"endColumn":21},{"ruleId":"456","severity":1,"message":"562","line":4,"column":5,"nodeType":"458","messageId":"459","endLine":4,"endColumn":19},{"ruleId":"456","severity":1,"message":"559","line":8,"column":8,"nodeType":"458","messageId":"459","endLine":8,"endColumn":13},{"ruleId":"456","severity":1,"message":"582","line":10,"column":7,"nodeType":"458","messageId":"459","endLine":10,"endColumn":25},{"ruleId":"494","severity":1,"message":"495","line":25,"column":39,"nodeType":"496","messageId":"497","endLine":25,"endColumn":41},{"ruleId":"456","severity":1,"message":"457","line":6,"column":8,"nodeType":"458","messageId":"459","endLine":6,"endColumn":12},{"ruleId":"456","severity":1,"message":"460","line":7,"column":8,"nodeType":"458","messageId":"459","endLine":7,"endColumn":16},{"ruleId":"456","severity":1,"message":"583","line":8,"column":8,"nodeType":"458","messageId":"459","endLine":8,"endColumn":12},{"ruleId":"456","severity":1,"message":"584","line":9,"column":8,"nodeType":"458","messageId":"459","endLine":9,"endColumn":19},{"ruleId":"456","severity":1,"message":"585","line":11,"column":8,"nodeType":"458","messageId":"459","endLine":11,"endColumn":14},{"ruleId":"456","severity":1,"message":"586","line":12,"column":8,"nodeType":"458","messageId":"459","endLine":12,"endColumn":14},{"ruleId":"456","severity":1,"message":"587","line":17,"column":10,"nodeType":"458","messageId":"459","endLine":17,"endColumn":29},{"ruleId":"456","severity":1,"message":"588","line":51,"column":11,"nodeType":"458","messageId":"459","endLine":51,"endColumn":24},{"ruleId":"473","severity":1,"message":"589","line":81,"column":8,"nodeType":"475","endLine":81,"endColumn":38,"suggestions":"590"},{"ruleId":"452","replacedBy":"591"},{"ruleId":"454","replacedBy":"592"},{"ruleId":"456","severity":1,"message":"593","line":1,"column":17,"nodeType":"458","messageId":"459","endLine":1,"endColumn":26},{"ruleId":"456","severity":1,"message":"594","line":9,"column":8,"nodeType":"458","messageId":"459","endLine":9,"endColumn":19},{"ruleId":"456","severity":1,"message":"463","line":18,"column":22,"nodeType":"458","messageId":"459","endLine":18,"endColumn":28},{"ruleId":"456","severity":1,"message":"464","line":19,"column":5,"nodeType":"458","messageId":"459","endLine":19,"endColumn":11},{"ruleId":"456","severity":1,"message":"465","line":20,"column":5,"nodeType":"458","messageId":"459","endLine":20,"endColumn":10},{"ruleId":"456","severity":1,"message":"466","line":21,"column":5,"nodeType":"458","messageId":"459","endLine":21,"endColumn":9},{"ruleId":"456","severity":1,"message":"467","line":22,"column":5,"nodeType":"458","messageId":"459","endLine":22,"endColumn":13},{"ruleId":"456","severity":1,"message":"595","line":24,"column":10,"nodeType":"458","messageId":"459","endLine":24,"endColumn":13},{"ruleId":"456","severity":1,"message":"596","line":47,"column":9,"nodeType":"458","messageId":"459","endLine":47,"endColumn":17},{"ruleId":"456","severity":1,"message":"597","line":48,"column":10,"nodeType":"458","messageId":"459","endLine":48,"endColumn":29},{"ruleId":"456","severity":1,"message":"598","line":48,"column":31,"nodeType":"458","messageId":"459","endLine":48,"endColumn":53},{"ruleId":"456","severity":1,"message":"599","line":49,"column":25,"nodeType":"458","messageId":"459","endLine":49,"endColumn":41},{"ruleId":"456","severity":1,"message":"581","line":3,"column":5,"nodeType":"458","messageId":"459","endLine":3,"endColumn":21},{"ruleId":"456","severity":1,"message":"562","line":4,"column":5,"nodeType":"458","messageId":"459","endLine":4,"endColumn":19},{"ruleId":"456","severity":1,"message":"600","line":5,"column":5,"nodeType":"458","messageId":"459","endLine":5,"endColumn":24},{"ruleId":"456","severity":1,"message":"559","line":7,"column":8,"nodeType":"458","messageId":"459","endLine":7,"endColumn":13},{"ruleId":"482","severity":1,"message":"483","line":80,"column":50,"nodeType":"484","messageId":"485","endLine":80,"endColumn":52},{"ruleId":"456","severity":1,"message":"601","line":15,"column":15,"nodeType":"458","messageId":"459","endLine":15,"endColumn":19},{"ruleId":"456","severity":1,"message":"602","line":15,"column":29,"nodeType":"458","messageId":"459","endLine":15,"endColumn":45},{"ruleId":"456","severity":1,"message":"505","line":1,"column":38,"nodeType":"458","messageId":"459","endLine":1,"endColumn":49},{"ruleId":"456","severity":1,"message":"603","line":7,"column":11,"nodeType":"458","messageId":"459","endLine":7,"endColumn":29},{"ruleId":"456","severity":1,"message":"604","line":1,"column":10,"nodeType":"458","messageId":"459","endLine":1,"endColumn":18},{"ruleId":"456","severity":1,"message":"463","line":3,"column":22,"nodeType":"458","messageId":"459","endLine":3,"endColumn":28},{"ruleId":"456","severity":1,"message":"464","line":4,"column":5,"nodeType":"458","messageId":"459","endLine":4,"endColumn":11},{"ruleId":"456","severity":1,"message":"465","line":5,"column":5,"nodeType":"458","messageId":"459","endLine":5,"endColumn":10},{"ruleId":"456","severity":1,"message":"466","line":6,"column":5,"nodeType":"458","messageId":"459","endLine":6,"endColumn":9},{"ruleId":"456","severity":1,"message":"467","line":7,"column":5,"nodeType":"458","messageId":"459","endLine":7,"endColumn":13},{"ruleId":"473","severity":1,"message":"605","line":12,"column":15,"nodeType":"496","endLine":14,"endColumn":6},{"ruleId":"452","replacedBy":"606"},{"ruleId":"454","replacedBy":"607"},{"ruleId":"456","severity":1,"message":"556","line":9,"column":8,"nodeType":"458","messageId":"459","endLine":9,"endColumn":25},{"ruleId":"456","severity":1,"message":"463","line":12,"column":22,"nodeType":"458","messageId":"459","endLine":12,"endColumn":28},{"ruleId":"456","severity":1,"message":"464","line":13,"column":5,"nodeType":"458","messageId":"459","endLine":13,"endColumn":11},{"ruleId":"456","severity":1,"message":"465","line":14,"column":5,"nodeType":"458","messageId":"459","endLine":14,"endColumn":10},{"ruleId":"456","severity":1,"message":"466","line":15,"column":5,"nodeType":"458","messageId":"459","endLine":15,"endColumn":9},{"ruleId":"456","severity":1,"message":"467","line":16,"column":5,"nodeType":"458","messageId":"459","endLine":16,"endColumn":13},{"ruleId":"552","severity":1,"message":"553","line":26,"column":34,"nodeType":"554","messageId":"485","endLine":26,"endColumn":36},{"ruleId":"452","replacedBy":"608"},{"ruleId":"454","replacedBy":"609"},{"ruleId":"456","severity":1,"message":"562","line":4,"column":5,"nodeType":"458","messageId":"459","endLine":4,"endColumn":19},{"ruleId":"456","severity":1,"message":"600","line":5,"column":5,"nodeType":"458","messageId":"459","endLine":5,"endColumn":24},{"ruleId":"456","severity":1,"message":"610","line":1,"column":8,"nodeType":"458","messageId":"459","endLine":1,"endColumn":12},{"ruleId":"456","severity":1,"message":"559","line":4,"column":8,"nodeType":"458","messageId":"459","endLine":4,"endColumn":13},{"ruleId":"456","severity":1,"message":"604","line":5,"column":9,"nodeType":"458","messageId":"459","endLine":5,"endColumn":17},{"ruleId":"456","severity":1,"message":"463","line":11,"column":20,"nodeType":"458","messageId":"459","endLine":11,"endColumn":26},{"ruleId":"456","severity":1,"message":"466","line":14,"column":3,"nodeType":"458","messageId":"459","endLine":14,"endColumn":7},{"ruleId":"456","severity":1,"message":"467","line":15,"column":3,"nodeType":"458","messageId":"459","endLine":15,"endColumn":11},{"ruleId":"456","severity":1,"message":"493","line":29,"column":9,"nodeType":"458","messageId":"459","endLine":29,"endColumn":16},{"ruleId":"456","severity":1,"message":"586","line":20,"column":8,"nodeType":"458","messageId":"459","endLine":20,"endColumn":14},{"ruleId":"456","severity":1,"message":"611","line":21,"column":8,"nodeType":"458","messageId":"459","endLine":21,"endColumn":18},{"ruleId":"456","severity":1,"message":"612","line":23,"column":8,"nodeType":"458","messageId":"459","endLine":23,"endColumn":14},{"ruleId":"456","severity":1,"message":"613","line":29,"column":23,"nodeType":"458","messageId":"459","endLine":29,"endColumn":34},{"ruleId":"456","severity":1,"message":"466","line":37,"column":5,"nodeType":"458","messageId":"459","endLine":37,"endColumn":9},{"ruleId":"456","severity":1,"message":"467","line":38,"column":5,"nodeType":"458","messageId":"459","endLine":38,"endColumn":13},{"ruleId":"456","severity":1,"message":"493","line":49,"column":11,"nodeType":"458","messageId":"459","endLine":49,"endColumn":18},{"ruleId":"473","severity":1,"message":"478","line":103,"column":8,"nodeType":"475","endLine":103,"endColumn":16,"suggestions":"614"},{"ruleId":"456","severity":1,"message":"615","line":110,"column":15,"nodeType":"458","messageId":"459","endLine":110,"endColumn":19},{"ruleId":"488","severity":1,"message":"489","line":149,"column":33,"nodeType":"490","endLine":149,"endColumn":144},{"ruleId":"456","severity":1,"message":"559","line":3,"column":8,"nodeType":"458","messageId":"459","endLine":3,"endColumn":13},{"ruleId":"456","severity":1,"message":"616","line":9,"column":12,"nodeType":"458","messageId":"459","endLine":9,"endColumn":20},{"ruleId":"473","severity":1,"message":"617","line":22,"column":8,"nodeType":"475","endLine":22,"endColumn":20,"suggestions":"618"},{"ruleId":"473","severity":1,"message":"619","line":32,"column":8,"nodeType":"475","endLine":32,"endColumn":20,"suggestions":"620"},{"ruleId":"456","severity":1,"message":"621","line":7,"column":8,"nodeType":"458","messageId":"459","endLine":7,"endColumn":22},{"ruleId":"456","severity":1,"message":"585","line":8,"column":8,"nodeType":"458","messageId":"459","endLine":8,"endColumn":14},{"ruleId":"456","severity":1,"message":"505","line":2,"column":38,"nodeType":"458","messageId":"459","endLine":2,"endColumn":49},{"ruleId":"456","severity":1,"message":"493","line":14,"column":11,"nodeType":"458","messageId":"459","endLine":14,"endColumn":18},{"ruleId":"473","severity":1,"message":"622","line":32,"column":8,"nodeType":"475","endLine":32,"endColumn":35,"suggestions":"623"},{"ruleId":"494","severity":1,"message":"495","line":54,"column":46,"nodeType":"496","messageId":"497","endLine":54,"endColumn":48},{"ruleId":"456","severity":1,"message":"463","line":3,"column":22,"nodeType":"458","messageId":"459","endLine":3,"endColumn":28},{"ruleId":"456","severity":1,"message":"464","line":4,"column":5,"nodeType":"458","messageId":"459","endLine":4,"endColumn":11},{"ruleId":"456","severity":1,"message":"465","line":5,"column":5,"nodeType":"458","messageId":"459","endLine":5,"endColumn":10},{"ruleId":"456","severity":1,"message":"467","line":7,"column":5,"nodeType":"458","messageId":"459","endLine":7,"endColumn":13},{"ruleId":"624","severity":1,"message":"625","line":49,"column":29,"nodeType":"490","endLine":49,"endColumn":126},{"ruleId":"624","severity":1,"message":"625","line":52,"column":33,"nodeType":"490","endLine":52,"endColumn":78},{"ruleId":"624","severity":1,"message":"625","line":55,"column":33,"nodeType":"490","endLine":55,"endColumn":78},{"ruleId":"624","severity":1,"message":"625","line":58,"column":29,"nodeType":"490","endLine":58,"endColumn":108},{"ruleId":"624","severity":1,"message":"625","line":61,"column":33,"nodeType":"490","endLine":61,"endColumn":105},{"ruleId":"456","severity":1,"message":"626","line":8,"column":21,"nodeType":"458","messageId":"459","endLine":8,"endColumn":31},{"ruleId":"456","severity":1,"message":"627","line":9,"column":12,"nodeType":"458","messageId":"459","endLine":9,"endColumn":19},{"ruleId":"456","severity":1,"message":"628","line":9,"column":21,"nodeType":"458","messageId":"459","endLine":9,"endColumn":31},{"ruleId":"456","severity":1,"message":"629","line":10,"column":12,"nodeType":"458","messageId":"459","endLine":10,"endColumn":16},{"ruleId":"456","severity":1,"message":"630","line":10,"column":18,"nodeType":"458","messageId":"459","endLine":10,"endColumn":25},{"ruleId":"456","severity":1,"message":"530","line":4,"column":8,"nodeType":"458","messageId":"459","endLine":4,"endColumn":17},{"ruleId":"456","severity":1,"message":"531","line":8,"column":8,"nodeType":"458","messageId":"459","endLine":8,"endColumn":25},{"ruleId":"456","severity":1,"message":"472","line":28,"column":25,"nodeType":"458","messageId":"459","endLine":28,"endColumn":39},{"ruleId":"488","severity":1,"message":"489","line":52,"column":13,"nodeType":"490","endLine":52,"endColumn":151},{"ruleId":"502","severity":1,"message":"503","line":16,"column":1,"nodeType":"504","endLine":21,"endColumn":3},"no-native-reassign",["631"],"no-negated-in-lhs",["632"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'TableItem' is defined but never used.","'socketio' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'selectBoardById' is defined but never used.","'selectBoardIds' is defined but never used.","'tableList' is assigned a value but never used.","'setTableList' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser._id'. Either include it or remove the dependency array.","ArrayExpression",["633"],["634"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["635"],["636"],"'path' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'renderTableList' is defined but never used.","'sleep' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["631"],["632"],"'classes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getItemChatList'. Either include it or remove the dependency array.",["637"],["631"],["632"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useLocation' is defined but never used.","'signInWithUsernameAndPasswordPath' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["631"],["632"],"'Divider' is defined but never used.","'remainingUser' is assigned a value but never used.","'setRemainingUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'iduser' and 'renderMatchListView'. Either include them or remove the dependency array.",["638"],["631"],["632"],["631"],["632"],"'selectAllBoards' is defined but never used.","'addNewBoard' is defined but never used.","'updateHostStatistic' is defined but never used.","'updateGuestStatistic' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'AddBoxIcon' is defined but never used.","'GridList' is defined but never used.","'TextField' is defined but never used.","'DialogContentText' is defined but never used.","'Audience' is defined but never used.","'URL' is assigned a value but never used.","'queryString' is assigned a value but never used.","'updateBoard' is assigned a value but never used.","'setUpdateBoard' is assigned a value but never used.","'setHistory' is assigned a value but never used.","'guestPlayerId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'isJoin'. Either include them or remove the dependency array.",["639"],["640"],"React Hook useEffect has a missing dependency: 'isStart'. Either include it or remove the dependency array.",["641"],"React Hook useEffect has missing dependencies: 'handleWinGame' and 'isTypePlay'. Either include them or remove the dependency array.",["642"],"Assignments to the 'board' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'leaveRoom'. Either include it or remove the dependency array.",["643"],"'renderHistoryList' is defined but never used.",["631"],["632"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'FixedSizeList' is defined but never used.","'AccountCircleIcon' is defined but never used.","'UserInfoDialog' is defined but never used.","'io' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'renderOnlineUserList'. Either include it or remove the dependency array.",["644"],"'createSelector' is defined but never used.","'userInfoDialogAdapter' is assigned a value but never used.",["631"],["632"],"'DeleteButton' is defined but never used.","'setInp' is assigned a value but never used.","'newMess' is assigned a value but never used.","'setNewMess' is assigned a value but never used.","'arrayMessage' is assigned a value but never used.","'setArrayMessage' is assigned a value but never used.",["645"],"React Hook useEffect has a missing dependency: 'itemChatList'. Either include it or remove the dependency array.",["646"],["631"],["632"],"'ReferenceArrayField' is defined but never used.","'Edit' is defined but never used.","'Filter' is defined but never used.","'TextInput' is defined but never used.","'createAsyncThunk' is defined but never used.","'onlineUsersAdapter' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'fetchUserInfoDialog' is defined but never used.","'flexContainer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'matchHistoryItem.createdAt', 'matchHistoryItem.id_user1', 'matchHistoryItem.id_user2', and 'renderMoveList'. Either include them or remove the dependency array.",["647"],["631"],["632"],"'useEffect' is defined but never used.","'CardActions' is defined but never used.","'set' is defined but never used.","'rerender' is assigned a value but never used.","'playingUserListView' is assigned a value but never used.","'setPlayingUserListView' is assigned a value but never used.","'setCurrentUserId' is assigned a value but never used.","'createEntityAdapter' is defined but never used.","'push' is assigned a value but never used.","'showNotification' is assigned a value but never used.","'requestPasswordUrl' is assigned a value but never used.","'useState' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching",["631"],["632"],["631"],["632"],"'logo' is defined but never used.","'Typography' is defined but never used.","'Helmet' is defined but never used.","'useSelector' is defined but never used.",["648"],"'data' is assigned a value but never used.","'lastMove' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'xIsNext'. Either include it or remove the dependency array. You can also do a functional update 'setXIsNext(x => ...)' if you only need 'xIsNext' in the 'setXIsNext' call.",["649"],"React Hook useEffect has a missing dependency: 'handleReplay'. Either include it or remove the dependency array. If 'handleReplay' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["650"],"'ListItemAvatar' is defined but never used.","React Hook useEffect has a missing dependency: 'renderRankingTable'. Either include it or remove the dependency array.",["651"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setWinLine' is assigned a value but never used.","'xIsNext' is assigned a value but never used.","'setXIsNext' is assigned a value but never used.","'XorO' is assigned a value but never used.","'setXorO' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"652","fix":"653"},{"desc":"652","fix":"654"},{"desc":"655","fix":"656"},{"desc":"655","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"678","fix":"679"},{"desc":"655","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},"Update the dependencies array to be: [currentUser._id, socket]",{"range":"687","text":"688"},{"range":"689","text":"688"},"Update the dependencies array to be: [dispatch, socket]",{"range":"690","text":"691"},{"range":"692","text":"691"},"Update the dependencies array to be: [getItemChatList, itemChatList.length]",{"range":"693","text":"694"},"Update the dependencies array to be: [iduser, matchList.length, renderMatchListView]",{"range":"695","text":"696"},"Update the dependencies array to be: [board, dispatch, isJoin, socket]",{"range":"697","text":"698"},"Update the dependencies array to be: [socket, isHost, dispatch]",{"range":"699","text":"700"},"Update the dependencies array to be: [isStart, socket]",{"range":"701","text":"702"},"Update the dependencies array to be: [second, oppSecond, isWin, isTypePlay, handleWinGame]",{"range":"703","text":"704"},"Update the dependencies array to be: [leaveRoom]",{"range":"705","text":"706"},"Update the dependencies array to be: [onlineUserList.length, renderOnlineUserList]",{"range":"707","text":"708"},"Update the dependencies array to be: [itemChatList.length, board, getItemChatList]",{"range":"709","text":"710"},"Update the dependencies array to be: [itemChatList, socket]",{"range":"711","text":"712"},"Update the dependencies array to be: [dispatch, matchHistoryItem.createdAt, matchHistoryItem.id_user1, matchHistoryItem.id_user2, matchHistoryItem.step.length, renderMoveList]",{"range":"713","text":"714"},{"range":"715","text":"691"},"Update the dependencies array to be: [newSquares, xIsNext]",{"range":"716","text":"717"},"Update the dependencies array to be: [handleReplay, newWinLine]",{"range":"718","text":"719"},"Update the dependencies array to be: [listUserDescending.length, renderRankingTable]",{"range":"720","text":"721"},[4420,4428],"[currentUser._id, socket]",[5008,5016],[5544,5552],"[dispatch, socket]",[6086,6094],[1008,1029],"[getItemChatList, itemChatList.length]",[2655,2673],"[iduser, matchList.length, renderMatchListView]",[5945,5960],"[board, dispatch, isJoin, socket]",[7037,7053],"[socket, isHost, dispatch]",[7925,7933],"[isStart, socket]",[10851,10877],"[second, oppSecond, isWin, isTypePlay, handleWinGame]",[13958,13960],"[leaveRoom]",[1912,1935],"[onlineUserList.length, renderOnlineUserList]",[1521,1549],"[itemChatList.length, board, getItemChatList]",[2566,2574],"[itemChatList, socket]",[2959,2989],"[dispatch, matchHistoryItem.createdAt, matchHistoryItem.id_user1, matchHistoryItem.id_user2, matchHistoryItem.step.length, renderMoveList]",[3901,3909],[798,810],"[newSquares, xIsNext]",[1037,1049],"[handleReplay, newWinLine]",[1028,1055],"[listUserDescending.length, renderRankingTable]"]